%% initialization
if ~exist('data','var')
    toso2021_wrapper;
end

%% plot proportion of ramping & non-ramping neurons across task epochs

% figure initialization
fig = figure(figopt,...
    'name','ramps across epochs');

% epoch settings
epochs = fieldnames(StereoCrit);
epochs = epochs(1:end-1);
n_epochs = numel(epochs);

% axes initialization
axes(axesopt.default,...
    'plotboxaspectratio',[2,1,1],...
    'color','none',...
    'ticklength',axesopt.default.ticklength*.58,...
    'xlim',[1,n_epochs]+[-1,1]*.75,...
    'xtick',1:n_epochs,...
    'xticklabel',strrep(epochs,'_',' '),...
    'ylimspec','tight',...
    'clipping','off',...
    'layer','bottom');
ylabel('Stereotypy coefficient');

% preallocation
rho_avg = struct();
rho_err = struct();

avgfun = @(x) nanmean(x);
errfun = @(x) [1,1] .* nanstd(x);
% avgfun = @(x) nanmedian(x);
% errfun = @(x) quantile(x,[.25,.75]) - nanmedian(x);

% iterate through alignments
for ee = 1 : n_epochs
    epoch = epochs{ee};
    [~,uscore_idcs] = regexp(epoch,'_');
    stim = lower(epoch(1:uscore_idcs(1)-1));
    rho_avg.(epoch) = [...
        avgfun(StereoCrit.(epoch)(ramp_idcs.(stim)));...
        avgfun(StereoCrit.(epoch)(nonramp_idcs.(stim)))];
    rho_err.(epoch) = [...
        errfun(StereoCrit.(epoch)(ramp_idcs.(stim)));...
        errfun(StereoCrit.(epoch)(nonramp_idcs.(stim)))];
end

% table conversions
rho_avg = struct2table(rho_avg,...
    'rownames',{'ramping','non-ramping'});
rho_err = struct2table(rho_err,...
    'rownames',{'ramping','non-ramping'});

% iterate through alignments
for ee = 1 : n_epochs
    epoch = epochs{ee};
    for rr = 1 : 2
        xoffset = (rr - 1) / 5;
        errorbar(ee+xoffset,rho_avg.(epoch)(rr),...
            rho_err.(epoch)(rr,1),rho_err.(epoch)(rr,2),...
            'color','k',...
            'marker','o',...
            'markersize',7.5,...
            'markeredgecolor','k',...
            'markerfacecolor',ramp_clrs(rr,:),...
            'linewidth',1.5);
    end
end

% update axes
yylim = [min(ylim),1];
yytick = [min(yylim),.5,1];
yyticklabel = num2cell(yytick);
yyticklabel(1) = {''};
set(gca,...
    'ylim',yylim + [-1,1] * .1 * range(yylim),...
    'ytick',yytick,...
    'yticklabel',yyticklabel);

return;

% counter = 0;
% epochfields = fieldnames(ramp_idcs);
% n_epochfields = numel(epochfields);
% for ii = 1 : n_epochfields
%     typefields = fieldnames(ramp_idcs.(epochfields{ii}));
%     n_typefields = numel(epochfields);
%     counter = counter + n_typefields;
%     continue;
%     for jj = 1 : n_typefields
%         if isstruct(ramp_idcs.(epochfields{ii}).(typefields{jj}))
%             subtypefields = fieldnames(ramp_idcs.(epochfields{ii}).(typefields{jj}));
%             n_subtypefields = numel(subtypefields);
%             for hh = 1 : n_subtypefields
%                 flags = ismember(...
%                     ramp_idcs.(epochfields{ii}).(typefields{jj}).(subtypefields{hh}),...
%                     flagged_neurons);
%                 ramp_idcs.(epochfields{ii}).(typefields{jj}).(subtypefields{hh}) = ...
%                     ramp_idcs.(epochfields{ii}).(typefields{jj}).(subtypefields{hh})(flags);
%             end
%         else
%             flags = ismember(...
%                 ramp_idcs.(epochfields{ii}).(typefields{jj}),...
%                 flagged_neurons);
%             ramp_idcs.(epochfields{ii}).(typefields{jj}) = ...
%                 ramp_idcs.(epochfields{ii}).(typefields{jj})(flags);
%         end
%     end
% end

% coefficient selection
coeffsets2plot = {...
    'T_1','T_2';...
    'I_1','I_2',...
    };
[n_coeffsets,n_coeffsperset] = size(coeffsets2plot);
setyymax = .3 ./ [1,2];
setlabels = {'Duration','Intensity'};

% axes initialization
yymax = setyymax(ss);
yylim = [0,1]*yymax+[-1,1]*.05*yymax;
yytick = unique([0,[0,1]*yymax,[0,1]*.05,[0,1]*.01]);
yyticklabel = num2cell(abs(round(yytick,2)));
yyticklabel(~ismember(yytick,[0,[0,1]*yymax])) = {''};
axes(axesopt.default,...
    'plotboxaspectratio',[2,1,1],...
    'color','none',...
    'ticklength',axesopt.default.ticklength*.58,...
    'xlim',[1,n_epochs]+[-1,1]*.75,...
    'xtick',1:n_epochs,...
    'xticklabel',struct2cell(glm_roi_lbl),...
    'xticklabelrotation',45,...
    'ylim',yylim,...
    'ytick',yytick,...
    'yticklabel',yyticklabel,...
    'clipping','off',...
    'layer','bottom');
ylabel(sprintf('P(significant %s coefficients)',lower(setlabels{ss})));

% color settings
s1_feature_str = lower(strrep(coeffsets2plot{ss,1},'_',''));
s2_feature_str = lower(strrep(coeffsets2plot{ss,2},'_',''));
stim_feature_clrs = [...
    eval([s1_feature_str,'_clrs(',[s1_feature_str,'_mode_idx'],',:)']);...
    eval([s2_feature_str,'_clrs(',[s2_feature_str,'_mode_idx'],',:)'])
    ];
stim_feature_clrs = stim_clrs;

% pseudo-legend (stimulus epochs)
s1epoch_idcs = ...
    [find(ismember(epochs,'postS1Onset')),...
    find(ismember(epochs,'preS1Offset'))];
plot(s1epoch_idcs,[1,1]*yymax,...
    'linestyle','-',...
    'linewidth',3,...
    'color',stim_feature_clrs(1,:));
text(mean(s1epoch_idcs),yymax*1.025,...
    sprintf('%s presentation','S1'),...
    'color',stim_feature_clrs(1,:),...
    'fontsize',12,...
    'horizontalalignment','center',...
    'verticalalignment','bottom');
s2epoch_idcs = ...
    [find(ismember(epochs,'postS2Onset')),...
    find(ismember(epochs,'preS2Offset'))];
plot(s2epoch_idcs,[1,1]*yymax,...
    'linestyle','-',...
    'linewidth',3,...
    'color',stim_feature_clrs(2,:));
text(mean(s2epoch_idcs),yymax*1.025,...
    sprintf('%s presentation','S2'),...
    'color',stim_feature_clrs(2,:),...
    'fontsize',12,...
    'horizontalalignment','center',...
    'verticalalignment','bottom');

% preallocation
P = nan(n_epochs,n_alphas,n_coeffsperset);

% iterate through coefficients
for bb = 1 : n_coeffsperset
    coeff_lbl = coeffsets2plot{ss,bb};
    coeff_idx = find(ismember(mdl.CoefficientNames,coeff_lbl));
    coeff_lbl = strrep(coeff_lbl,'#','');
    coeff_str = strrep(lower(coeff_lbl),'_','');
    coeff_clrs = eval([coeff_str,'_clrs']);
    
    % iterate through alphas
    for aa = 1 : n_alphas
        
        % iterate through epochs
        for ee = 1 : n_epochs
            epoch = epochs{ee};
            P(ee,aa,bb) = sum(...
                fractions.(glm_str).(epoch).(coeff_lbl)(rr,aa,:));
        end
        
        % plot sign-agnostic proportion through epochs
        stairs(1:n_epochs,P(:,aa,bb),...
            'color',stim_feature_clrs(bb,:),...
            'linewidth',1.5,...
            'linestyle',repmat('-',1,1+(alphas(aa)==max(alphas))));
    end
end

% iterate through alphas
for aa = 1 : n_alphas
    if alphas(aa) == min(alphas)
        clr = [0,0,0];
    else
        clrs = colorlerp([[0,0,0];[1,1,1]],n_fadedcolors);
        clr = clrs(end-1,:);
    end
    
    % iterate through epochs
    for ee = 1 : n_epochs
        text(ee,max(ylim)*(1.025+aa*.05),...
            sprintf('%.2f',P(ee,aa,2)/P(ee,aa,1)),...
            'color',clr);
    end
end

% legend
leg_h = gobjects(n_alphas,1);
for aa = 1 : n_alphas
    leg_h(aa) = plot([1,2]*max(xlim)*1.5,[1,2]*max(ylim)*1.5,...
        'color','k',...
        'linewidth',1.5,...
        'linestyle',repmat('-',1,1+(alphas(aa)==max(alphas))));
end
leg_str = arrayfun(@(x)sprintf('\\alpha = %.2f %s %s',x,...
    strrep(coeffsets2plot{ss,1},'_',''),...
    strrep(coeffsets2plot{ss,2},'_','')),...
    alphas,...
    'uniformoutput',false);
legend(leg_h,leg_str,...
    'location','northwest',...
    'color','k',...
    'fontweight','normal',...
    'box','off');

% save figure
if want2save
    svg_file = fullfile(panel_path,[fig.Name,'.svg']);
    print(fig,svg_file,'-dsvg','-painters');
end

%%

figure;
hold on;
histogram(StereoCrit.S1_onset(ramp_idcs.s1));
histogram(StereoCrit.S1_onset(nonramp_idcs.s1));

figure;
hold on;
histogram(StereoCrit.S1_offset(ramp_idcs.s1));
histogram(StereoCrit.S1_offset(nonramp_idcs.s1));

figure;
hold on;
histogram(StereoCrit.S2_onset(ramp_idcs.s1));
histogram(StereoCrit.S2_onset(nonramp_idcs.s1));

figure;
hold on;
histogram(StereoCrit.S2_offset(ramp_idcs.s1));
histogram(StereoCrit.S2_offset(nonramp_idcs.s1));