%% initialization
if ~exist('data','var')
    toso2021_wrapper;
end

%% neuron selection

% selected for being good examples of i2-modulation
if strcmpi(task_str,'duration')
    neurons2plot = [...
        21,35,38,62,72,100,130,205,206,215,224,...
        234,241,391,393,397,402,406,428,...
        441,459,462,470,473,526,544,566];
elseif strcmpi(task_str,'intensity')
    neurons2plot = [...
        19,22,30,61,66,70,100,111,112,115,...
        166,238,243,260,344,408,410];
end
% neurons2plot = flagged_neurons;
n_neurons2plot = numel(neurons2plot);

%% version-dependent spike marker
version = ver('matlab');
if contains(version.Release,'2019')
    spike_marker = '.';
else
    spike_marker = '|';
end

%% construct Si-aligned, Ti- & Ii-split psths
time2plot = psthbin : psthbin : post_s2_delay;
time_flags = time2plot <= post_s2_delay;

% iterate through neurons
for nn = 1 : n_neurons2plot
    progressreport(nn,n_neurons2plot,'parsing neural data');
    neuron_flags = data.NeuronNumb == neurons2plot(nn);
    
    % figure initialization
    fig = figure(figopt,...
        ...'windowstate','maximized',...
        'position',[1000-750,1250-750,1525,460],...
        'name',sprintf('neuron_%i_%s',neurons2plot(nn),'post_s2'));
    n_rows = 2;
    n_cols = 7;
    n_sps = (n_rows - 1) * n_cols;
    sps = gobjects(n_sps,1);
    for ii = 1 : n_cols
        sps(ii) = subplot(n_rows,n_cols,ii);
        sps(ii+n_cols) = subplot(n_rows,n_cols,n_cols+ii);
    end
    set(sps,...
        axesopt.default,...
        'xlim',[0,post_s2_delay],...
        'xtick',[0,post_s2_delay],...
        'yaxislocation','right',...
        'layer','top',...
        'plotboxaspectratiomode','auto',...
        'ylimspec','tight');
    xlabel(sps(1+n_cols),'Time since T_2 offset (s)');
    xlabel(sps(2+n_cols),'Time since T_2 offset (s)');
    xlabel(sps(3+n_cols),'Time since T_2 offset (s)');
    xlabel(sps(4+n_cols),'Time since T_2 offset (s)');
    ylabel(sps(1),'Firing rate (Hz)',...
        'rotation',-90);
    ylabel(sps(2),'Firing rate (Hz)',...
        'rotation',-90);
    ylabel(sps(3),'Firing rate (Hz)',...
        'rotation',-90);
    ylabel(sps(4),'Firing rate (Hz)',...
        'rotation',-90);
    ylabel(sps(1+n_cols),'Trial #',...
        'rotation',-90);
    ylabel(sps(2+n_cols),'Trial #',...
        'rotation',-90);
    ylabel(sps(3+n_cols),'Trial #',...
        'rotation',-90);
    ylabel(sps(4+n_cols),'Trial #',...
        'rotation',-90);
    
    % preallocation
    s1_n_trial_counter = 0;
    isi_n_trial_counter = 0;
    i2_n_trial_counter = 0;
    post_s2_n_trial_counter = 0;
    s1_boundaries = nan(n_i,1);
    isi_boundaries = nan(n_t,1);
    i2_boundaries = nan(n_i,1);
    post_s2_boundaries = nan(n_t,1);
    
    % iterate through intensities
    for ii = 1 : n_i
        i1_flags = i1 == i_set(ii);
        s1_spike_flags = ...
            valid_flags & ...
            neuron_flags & ...
            i1_flags;
        if sum(s1_spike_flags) == 0
            continue;
        end
        
        % fetch spike counts & compute spike rates
        s1_spike_counts = data.FR(s1_spike_flags,:);
        s1_spike_rates = conv2(...
            1,kernel.pdf,s1_spike_counts,'valid')' / psthbin * 1e3;
        s1_n_trials = size(s1_spike_counts,1);
        s1_n_tbins = post_s2_delay * psthbin;
        
        % T1-aligned, T1-split spike rates
        s1_alignment_onset = ...
            pre_init_padding + ...
            pre_t1_delay(s1_spike_flags) + ...
            t1(s1_spike_flags) + ...
            isi + ...
            t2(s1_spike_flags);
        s1_alignment_flags = ...
            valid_time >= s1_alignment_onset & ...
            valid_time < s1_alignment_onset + post_s2_delay;
        s1_chunk_flags = s1_alignment_flags;
        s1_spkrates = s1_spike_rates;
        s1_spkrates(~s1_alignment_flags') = nan;
        s1_spkrates = reshape(...
            s1_spkrates(s1_chunk_flags'),[s1_n_tbins,s1_n_trials])';
        
        % compute mean spike density function
        s1_mu = nanmean(s1_spkrates(:,time_flags),1);
        s1_std = nanstd(s1_spkrates(:,time_flags),0,1);
        s1_trials_throughtime = sum(~isnan(s1_spkrates),1);
        s1_sem = s1_std ./ sqrt(s1_trials_throughtime);
        
        % flag current stimulus period
        nan_flags = isnan(s1_mu);
        onset_flags = time2plot <= 0 & [time2plot(2:end),nan] > 0;
        offset_flags = diff([nan_flags,true]) == 1;
        flagged_time = time2plot(~nan_flags);
        
        % patch s.e.m.
        s1_xpatch = [flagged_time,fliplr(flagged_time)];
        s1_ypatch = [s1_mu(~nan_flags)-s1_sem(~nan_flags),...
            fliplr(s1_mu(~nan_flags)+s1_sem(~nan_flags))];
        patch_alpha = [s1_trials_throughtime(~nan_flags),...
            fliplr(s1_trials_throughtime(~nan_flags))].^0;
        patch_alpha = patch_alpha * .25 + .05;
        patch(sps(1),s1_xpatch,s1_ypatch,i1_clrs(ii,:),...
            'facevertexalphadata',patch_alpha',...
            'alphadatamapping','none',...
            'facealpha','interp',...
            'edgecolor','none');
        
        % patch average activity
        s1_xpatch = flagged_time(~nan_flags);
        s1_ypatch = s1_mu(~nan_flags);
        s1_ypatch(end) = nan;
        patch_alpha = s1_trials_throughtime(~nan_flags).^0;
        patch_alpha = patch_alpha * .95 + .05;
        patch(sps(1),s1_xpatch,s1_ypatch,0,...
            'facevertexalphadata',patch_alpha',...
            'alphadatamapping','none',...
            'edgealpha','interp',...
            'edgecolor',i1_clrs(ii,:),...
            'linewidth',1.5);
        
        % plot onset & offset
        plot(sps(1),time2plot(onset_flags),s1_mu(onset_flags),...
            'linewidth',1.5,...
            'marker','o',...
            'markersize',7.5,...
            'markerfacecolor','w',...
            'markeredgecolor',i1_clrs(ii,:));
        
        % plot T1 raster
        s1_time_mat = padded_time - (...
            pre_init_padding + ...
            pre_t1_delay(s1_spike_flags) + ...
            t1(s1_spike_flags) + ...
            isi + ...
            t2(s1_spike_flags));
        s1_trial_idcs = (1 : s1_n_trials)' + s1_n_trial_counter;
        s1_trial_mat = repmat(s1_trial_idcs,1,n_paddedtimebins);
        s1_spike_trials = s1_trial_mat(s1_spike_counts >= 1);
        s1_spike_times = s1_time_mat(s1_spike_counts >= 1);
        trial_sorter = [t1(s1_spike_flags),prev_choices(s1_spike_flags)];
        [~,sorted_idcs] = sortrows(trial_sorter,[1,-2]);
        [~,resorted_idcs] = sortrows(sorted_idcs);
        resorted_idcs = resorted_idcs + s1_n_trial_counter;
        s1_sorted_trials = resorted_idcs(s1_spike_trials - s1_n_trial_counter);
        plot(sps(1+n_cols),s1_spike_times,s1_sorted_trials,...
            'color','k',...
            'marker',spike_marker,...
            'markersize',2,...
            'linestyle','none');
        
        % plot raster bands
        xpatch = [0,.05,.05,0] .* range(xlim(sps(1)));
        ypatch = [.5,.5,s1_n_trials+.5,s1_n_trials+.5] + s1_n_trial_counter;
        patch(sps(1+n_cols),xpatch,ypatch,i1_clrs(ii,:),...
            'linewidth',1.5,...
            'facealpha',.75,...
            'edgecolor','none');
        
        % update trial counters
        s1_n_trial_counter = s1_n_trial_counter + s1_n_trials;
        s1_boundaries(ii) = s1_n_trials;
    end
    
    % iterate through durations
    for tt = n_t : -1 : 1
        t1_flags = t1 == t_set(tt);
        isi_spike_flags = ...
            valid_flags & ...
            neuron_flags & ...
            t1_flags;
        if sum(isi_spike_flags) == 0
            continue;
        end
        
        % fetch spike counts & compute spike rates
        isi_spike_counts = data.FR(isi_spike_flags,:);
        isi_spike_rates = conv2(...
            1,kernel.pdf,isi_spike_counts,'valid')' / psthbin * 1e3;
        isi_n_trials = size(isi_spike_counts,1);
        isi_n_tbins = post_s2_delay * psthbin;
        
        % T2-aligned, T1-split spike rates
        isi_alignment_onset = ...
            pre_init_padding + ...
            pre_t1_delay(isi_spike_flags) + ...
            t1(isi_spike_flags) + ...
            isi + ...
            t2(isi_spike_flags);
        isi_alignment_flags = ...
            valid_time >= isi_alignment_onset & ...
            valid_time < isi_alignment_onset + post_s2_delay;
        isi_chunk_flags = isi_alignment_flags;
        isi_spkrates = isi_spike_rates;
        isi_spkrates(~isi_alignment_flags') = nan;
        isi_spkrates = reshape(...
            isi_spkrates(isi_chunk_flags'),[isi_n_tbins,isi_n_trials])';
        
        % compute mean spike density function
        isi_mu = nanmean(isi_spkrates(:,time_flags),1);
        isi_std = nanstd(isi_spkrates(:,time_flags),0,1);
        isi_trials_throughtime = sum(~isnan(isi_spkrates),1);
        isi_sem = isi_std ./ sqrt(isi_trials_throughtime);
        
        % flag current stimulus period
        nan_flags = isnan(isi_mu);
        onset_flags = time2plot <= 0 & [time2plot(2:end),nan] > 0;
        offset_flags = diff([nan_flags,true]) == 1;
        flagged_time = time2plot(~nan_flags);
        
        % patch s.e.m.
        isi_xpatch = [flagged_time,fliplr(flagged_time)];
        isi_ypatch = [isi_mu(~nan_flags)-isi_sem(~nan_flags),...
            fliplr(isi_mu(~nan_flags)+isi_sem(~nan_flags))];
        patch_alpha = [isi_trials_throughtime(~nan_flags),...
            fliplr(isi_trials_throughtime(~nan_flags))].^0;
        patch_alpha = patch_alpha * .25 + .05;
        patch(sps(2),isi_xpatch,isi_ypatch,t1_clrs(tt,:),...
            'facevertexalphadata',patch_alpha',...
            'alphadatamapping','none',...
            'facealpha','interp',...
            'edgecolor','none');
        
        % patch average activity
        isi_xpatch = flagged_time(~nan_flags);
        isi_ypatch = isi_mu(~nan_flags);
        isi_ypatch(end) = nan;
        patch_alpha = isi_trials_throughtime(~nan_flags).^0;
        patch_alpha = patch_alpha * .95 + .05;
        patch(sps(2),isi_xpatch,isi_ypatch,0,...
            'facevertexalphadata',patch_alpha',...
            'alphadatamapping','none',...
            'edgealpha','interp',...
            'edgecolor',t1_clrs(tt,:),...
            'linewidth',1.5);
        
        % plot onset & offset
        plot(sps(2),time2plot(onset_flags),isi_mu(onset_flags),...
            'linewidth',1.5,...
            'marker','o',...
            'markersize',7.5,...
            'markerfacecolor','w',...
            'markeredgecolor',t1_clrs(tt,:));
        
        % plot T1 raster
        isi_time_mat = padded_time - (...
            pre_init_padding + ...
            pre_t1_delay(isi_spike_flags) + ...
            t1(isi_spike_flags) + ...
            isi + ...
            t2(isi_spike_flags));
        isi_trial_idcs = (1 : isi_n_trials)' + isi_n_trial_counter;
        isi_trial_mat = repmat(isi_trial_idcs,1,n_paddedtimebins);
        isi_spike_trials = isi_trial_mat(isi_spike_counts >= 1);
        isi_spike_times = isi_time_mat(isi_spike_counts >= 1);
        trial_sorter = [t1(isi_spike_flags),prev_choices(isi_spike_flags)];
        [~,sorted_idcs] = sortrows(trial_sorter,[1,-2]);
        [~,resorted_idcs] = sortrows(sorted_idcs);
        resorted_idcs = resorted_idcs + isi_n_trial_counter;
        isi_sorted_trials = resorted_idcs(isi_spike_trials - isi_n_trial_counter);
        plot(sps(2+n_cols),isi_spike_times,isi_sorted_trials,...
            'color','k',...
            'marker',spike_marker,...
            'markersize',2,...
            'linestyle','none');
        
        % plot raster bands
        xpatch = [0,.05,.05,0] .* range(xlim(sps(2)));
        ypatch = [.5,.5,isi_n_trials+.5,isi_n_trials+.5] + isi_n_trial_counter;
        patch(sps(2+n_cols),xpatch,ypatch,t1_clrs(tt,:),...
            'linewidth',1.5,...
            'facealpha',.75,...
            'edgecolor','none');
        
        % update trial counters
        isi_n_trial_counter = isi_n_trial_counter + isi_n_trials;
        isi_boundaries(tt) = isi_n_trials;
    end
    
    % iterate through intensities
    for ii = 1 : n_i
        i2_flags = i2 == i_set(ii);
        i2_spike_flags = ...
            valid_flags & ...
            neuron_flags & ...
            i2_flags;
        if sum(i1_spike_flags) == 0 || ...
                sum(i2_spike_flags) == 0
            continue;
        end
        
        % fetch spike counts & compute spike rates
        i2_spike_counts = data.FR(i2_spike_flags,:);
        i2_spike_rates = conv2(...
            1,kernel.pdf,i2_spike_counts,'valid')' / psthbin * 1e3;
        i2_n_trials = size(i2_spike_counts,1);
        i2_n_tbins = post_s2_delay * psthbin;
        
        % T2-aligned, I2-split spike rates
        i2_alignment_onset = ...
            pre_init_padding + ...
            pre_t1_delay(i2_spike_flags) + ...
            t1(i2_spike_flags) + ...
            isi + ...
            t2(i2_spike_flags);
        i2_alignment_flags = ...
            valid_time >= i2_alignment_onset & ...
            valid_time < i2_alignment_onset + post_s2_delay;
        i2_chunk_flags = i2_alignment_flags;
        i2_spkrates = i2_spike_rates;
        i2_spkrates(~i2_alignment_flags') = nan;
        i2_spkrates = reshape(...
            i2_spkrates(i2_chunk_flags'),[i2_n_tbins,i2_n_trials])';
        
        % compute mean spike density function
        i2_mu = nanmean(i2_spkrates(:,time_flags),1);
        i2_std = nanstd(i2_spkrates(:,time_flags),0,1);
        i2_trials_throughtime = sum(~isnan(i2_spkrates),1);
        i2_sem = i2_std ./ sqrt(i2_trials_throughtime);
        
        % flag current stimulus period
        nan_flags = isnan(i2_mu);
        onset_flags = time2plot <= 0 & [time2plot(2:end),nan] > 0;
        offset_flags = diff([nan_flags,true]) == 1;
        flagged_time = time2plot(~nan_flags);
        
        % patch s.e.m.
        i2_xpatch = [flagged_time,fliplr(flagged_time)];
        i2_ypatch = [i2_mu(~nan_flags)-i2_sem(~nan_flags),...
            fliplr(i2_mu(~nan_flags)+i2_sem(~nan_flags))];
        patch_alpha = [i2_trials_throughtime(~nan_flags),...
            fliplr(i2_trials_throughtime(~nan_flags))].^0;
        patch_alpha = patch_alpha * .25 + .05;
        patch(sps(3),i2_xpatch,i2_ypatch,i2_clrs(ii,:),...
            'facevertexalphadata',patch_alpha',...
            'alphadatamapping','none',...
            'facealpha','interp',...
            'edgecolor','none');
        
        % patch average activity
        i2_xpatch = flagged_time(~nan_flags);
        i2_ypatch = i2_mu(~nan_flags);
        i2_ypatch(end) = nan;
        patch_alpha = i2_trials_throughtime(~nan_flags).^0;
        patch_alpha = patch_alpha * .95 + .05;
        patch(sps(3),i2_xpatch,i2_ypatch,0,...
            'facevertexalphadata',patch_alpha',...
            'alphadatamapping','none',...
            'edgealpha','interp',...
            'edgecolor',i2_clrs(ii,:),...
            'linewidth',1.5);
        
        % plot onset & offset
        plot(sps(3),time2plot(onset_flags),i2_mu(onset_flags),...
            'linewidth',1.5,...
            'marker','o',...
            'markersize',7.5,...
            'markerfacecolor','w',...
            'markeredgecolor',i2_clrs(ii,:));
        
        % plot I2 raster
        i2_time_mat = padded_time - (...
            pre_init_padding + ...
            pre_t1_delay(i2_spike_flags) + ...
            t1(i2_spike_flags) + ...
            isi + ...
            t2(i2_spike_flags));
        i2_trial_idcs = (1 : i2_n_trials)' + i2_n_trial_counter;
        i2_trial_mat = repmat(i2_trial_idcs,1,n_paddedtimebins);
        i2_spike_trials = i2_trial_mat(i2_spike_counts >= 1);
        i2_spike_times = i2_time_mat(i2_spike_counts >= 1);
        trial_sorter = [t2(i2_spike_flags),choice(i2_spike_flags)];
        [~,sorted_idcs] = sortrows(trial_sorter,[1,-2]);
        [~,resorted_idcs] = sortrows(sorted_idcs);
        resorted_idcs = resorted_idcs + i2_n_trial_counter;
        i2_sorted_trials = resorted_idcs(i2_spike_trials - i2_n_trial_counter);
        plot(sps(3+n_cols),i2_spike_times,i2_sorted_trials,...
            'color','k',...
            'marker',spike_marker,...
            'markersize',2,...
            'linestyle','none');
        
        % plot raster bands
        xpatch = [0,.05,.05,0] .* range(xlim(sps(2)));
        ypatch = [.5,.5,i2_n_trials+.5,i2_n_trials+.5] + i2_n_trial_counter;
        patch(sps(3+n_cols),xpatch,ypatch,i2_clrs(ii,:),...
            'linewidth',1.5,...
            'facealpha',.75,...
            'edgecolor','none');
        
        % update trial counters
        i2_n_trial_counter = i2_n_trial_counter + i2_n_trials;
        i2_boundaries(ii) = i2_n_trials;
    end
    
    % iterate through durations
    for tt = n_t : -1 : 1
        t2_flags = t2 == t_set(tt);
        isi_spike_flags = ...
            valid_flags & ...
            neuron_flags & ...
            t2_flags;
        if sum(isi_spike_flags) == 0
            continue;
        end
        
        % fetch spike counts & compute spike rates
        isi_spike_counts = data.FR(isi_spike_flags,:);
        isi_spike_rates = conv2(...
            1,kernel.pdf,isi_spike_counts,'valid')' / psthbin * 1e3;
        isi_n_trials = size(isi_spike_counts,1);
        isi_n_tbins = post_s2_delay * psthbin;
        
        % T2-aligned, T1-split spike rates
        isi_alignment_onset = ...
            pre_init_padding + ...
            pre_t1_delay(isi_spike_flags) + ...
            t1(isi_spike_flags) + ...
            isi + ...
            t2(isi_spike_flags);
        isi_alignment_flags = ...
            valid_time >= isi_alignment_onset & ...
            valid_time < isi_alignment_onset + post_s2_delay;
        isi_chunk_flags = isi_alignment_flags;
        isi_spkrates = isi_spike_rates;
        isi_spkrates(~isi_alignment_flags') = nan;
        isi_spkrates = reshape(...
            isi_spkrates(isi_chunk_flags'),[isi_n_tbins,isi_n_trials])';
        
        % compute mean spike density function
        isi_mu = nanmean(isi_spkrates(:,time_flags),1);
        isi_std = nanstd(isi_spkrates(:,time_flags),0,1);
        isi_trials_throughtime = sum(~isnan(isi_spkrates),1);
        isi_sem = isi_std ./ sqrt(isi_trials_throughtime);
        
        % flag current stimulus period
        nan_flags = isnan(isi_mu);
        onset_flags = time2plot <= 0 & [time2plot(2:end),nan] > 0;
        offset_flags = diff([nan_flags,true]) == 1;
        flagged_time = time2plot(~nan_flags);
        
        % patch s.e.m.
        isi_xpatch = [flagged_time,fliplr(flagged_time)];
        isi_ypatch = [isi_mu(~nan_flags)-isi_sem(~nan_flags),...
            fliplr(isi_mu(~nan_flags)+isi_sem(~nan_flags))];
        patch_alpha = [isi_trials_throughtime(~nan_flags),...
            fliplr(isi_trials_throughtime(~nan_flags))].^0;
        patch_alpha = patch_alpha * .25 + .05;
        patch(sps(4),isi_xpatch,isi_ypatch,t2_clrs(tt,:),...
            'facevertexalphadata',patch_alpha',...
            'alphadatamapping','none',...
            'facealpha','interp',...
            'edgecolor','none');
        
        % patch average activity
        isi_xpatch = flagged_time(~nan_flags);
        isi_ypatch = isi_mu(~nan_flags);
        isi_ypatch(end) = nan;
        patch_alpha = isi_trials_throughtime(~nan_flags).^0;
        patch_alpha = patch_alpha * .95 + .05;
        patch(sps(4),isi_xpatch,isi_ypatch,0,...
            'facevertexalphadata',patch_alpha',...
            'alphadatamapping','none',...
            'edgealpha','interp',...
            'edgecolor',t2_clrs(tt,:),...
            'linewidth',1.5);
        
        % plot onset & offset
        plot(sps(4),time2plot(onset_flags),isi_mu(onset_flags),...
            'linewidth',1.5,...
            'marker','o',...
            'markersize',7.5,...
            'markerfacecolor','w',...
            'markeredgecolor',t2_clrs(tt,:));
        
        % plot T1 raster
        isi_time_mat = padded_time - (...
            pre_init_padding + ...
            pre_t1_delay(isi_spike_flags) + ...
            t1(isi_spike_flags) + ...
            isi + ...
            t2(isi_spike_flags));
        isi_trial_idcs = (1 : isi_n_trials)' + post_s2_n_trial_counter;
        isi_trial_mat = repmat(isi_trial_idcs,1,n_paddedtimebins);
        isi_spike_trials = isi_trial_mat(isi_spike_counts >= 1);
        isi_spike_times = isi_time_mat(isi_spike_counts >= 1);
        trial_sorter = [t1(isi_spike_flags),prev_choices(isi_spike_flags)];
        [~,sorted_idcs] = sortrows(trial_sorter,[1,-2]);
        [~,resorted_idcs] = sortrows(sorted_idcs);
        resorted_idcs = resorted_idcs + post_s2_n_trial_counter;
        isi_sorted_trials = resorted_idcs(isi_spike_trials - post_s2_n_trial_counter);
        plot(sps(4+n_cols),isi_spike_times,isi_sorted_trials,...
            'color','k',...
            'marker',spike_marker,...
            'markersize',2,...
            'linestyle','none');
        
        % plot raster bands
        xpatch = [0,.05,.05,0] .* range(xlim(sps(2)));
        ypatch = [.5,.5,isi_n_trials+.5,isi_n_trials+.5] + post_s2_n_trial_counter;
        patch(sps(4+n_cols),xpatch,ypatch,t2_clrs(tt,:),...
            'linewidth',1.5,...
            'facealpha',.75,...
            'edgecolor','none');
        
        % update trial counters
        post_s2_n_trial_counter = post_s2_n_trial_counter + isi_n_trials;
        post_s2_boundaries(tt) = isi_n_trials;
    end
    
    if all(isnan(s1_boundaries)) || ...
            all(isnan(isi_boundaries)) || ...
            all(isnan(i2_boundaries))|| ...
            all(isnan(post_s2_boundaries))
        continue;
    end
    
    % axes updates
    set(sps(1+n_cols),...
        'ylim',[1,nansum(s1_boundaries)]+[-1,1]*.5,...
        'ytick',unique([1;cumsum(s1_boundaries,'omitnan')]));
    set(sps(2+n_cols),...
        'ylim',[1,nansum(isi_boundaries)]+[-1,1]*.5,...
        'ytick',unique(1+nansum(isi_boundaries)-[1;cumsum(isi_boundaries,'omitnan')]));
    set(sps(3+n_cols),...
        'ylim',[1,nansum(i2_boundaries)]+[-1,1]*.5,...
        'ytick',unique([1;cumsum(i2_boundaries,'omitnan')]));
    set(sps(4+n_cols),...
        'ylim',[1,nansum(post_s2_boundaries)]+[-1,1]*.5,...
        'ytick',unique(1+nansum(post_s2_boundaries)-[1;cumsum(post_s2_boundaries,'omitnan')]));
    
    % axes linkage
    linkaxes(sps(1:n_cols),'y');
    
    % update y-axis limits
    yylim = [min([ylim(sps(1)),ylim(sps(2)),ylim(sps(3))]),...
        max([ylim(sps(1)),ylim(sps(2)),ylim(sps(3))])];
    yylim = 5 * [floor(yylim(1)/5),floor(yylim(2)/5)];
    yylim = max(yylim,[0,1]);
    set(sps(1:n_cols),...
        'ylim',yylim,...
        'ytick',yylim,...
        'clipping','off');
    
    % save figure
    if want2save
        try
            % save settings
            png_file = fullfile(raster_path,[get(fig,'name'),'.png']);
            print(fig,png_file,'-dpng','-r300','-painters');
            svg_file = fullfile(panel_path,[fig.Name,'.svg']);
            print(fig,svg_file,'-dsvg','-painters');
            close(fig);
        catch
            close(fig);
        end
    else
        pause(1);
        close(fig);
    end
end
