%% initialization
if ~exist('data','var')
    toso2021_wrapper;
end

%% choice GLM (complete model)
X = [s1,s2,d1,d2]; % ,s1.*d1,s2.*d2];
Z = (X - nanmean(X)) ./ nanstd(X);
mdl = fitglm(Z(valid_flags,:),choice(valid_flags,:),'linear',...
    'predictorvars',{s1_lbl,s2_lbl,d1_lbl,d2_lbl},...,'T1:I1','T2:I2'},...
    'distribution','binomial',...
    'intercept',true);
betas = mdl.Coefficients.Estimate;
beta_s1 = betas(2);
beta_s2 = betas(3);
n_betas = numel(betas);
beta_labels = mdl.CoefficientNames;
beta_labels{1} = 'Intercept';
fig = figure(figopt,...
    'name','choice_GLM');
axes(axesopt.default,...
    'xlim',[0,n_betas+1],...
    'xtick',1:n_betas,...
    'xticklabelrotation',45,...
    'xticklabel',beta_labels,...
    'plotboxaspectratio',[1,1,1]);
xlabel('Regressor');
ylabel('Weight');

% plot coefficients
p = stem(1:numel(betas),betas,...
    'color','k',...
    'marker','o',...
    'markersize',10,...
    'markerfacecolor','k',...
    'markeredgecolor','w',...
    'linewidth',1.5);
p.BaseLine.LineWidth = p.LineWidth;

% save figure
if want2save
    svg_file = fullfile(panel_path,[fig.Name,'.svg']);
    print(fig,svg_file,'-dsvg','-painters');
end