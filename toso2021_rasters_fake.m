%% initialization
if ~exist('data','var')
    toso2021_wrapper;
end
close all;

%% neuron selection

% selected for being good examples of i2-modulation
if strcmpi(task_str,'duration')
    neurons2plot = [...
        21,24,35,38,62,65,68,72,100,130,205,206,215,224,...
        234,241,356,381,391,393,397,402,406,428,441,448,...
        459,461,462,470,473,493,526,544,553,555,566];
    %     neurons2plot = [...
    %         38,72,205,215,224,391,393,397,402,448,459,462,470,526,566];
elseif strcmpi(task_str,'intensity')
    neurons2plot = [...
        19,22,30,61,66,70,100,111,112,115,...
        166,238,243,260,344,408,410];
end
neurons2plot = flagged_neurons;
neurons2plot = neuron_idcs;
n_neurons2plot = numel(neurons2plot);

%% version-dependent spike marker
version = ver('matlab');
if contains(version.Release,'2019')
    spike_marker = '.';
    spike_markersize = 2.5;
else
    spike_marker = '.';
    spike_markersize = 2.5;
end

%% construct Si-aligned, Ti- & Ii-split psths
ti_padd = [-500,0];

% iterate through neurons
for nn = 1 : n_neurons2plot
    progressreport(nn,n_neurons2plot,'parsing neural data');
    neuron_flags = data.NeuronNumb == neurons2plot(nn);
    
    % figure initialization
    fig = figure(figopt,...
        ...'windowstate','maximized',...
        'position',[541.8000 905 2560 1.3248e+03],...
        'name',sprintf('neuron_%i',neurons2plot(nn)));
    n_rows = 4;
    n_cols = 3;
    n_sps = n_rows * n_cols;
    sps = gobjects(n_sps,1);
    for ii = 1 : n_cols
        for jj = 1 : n_rows
            idx = ii + (jj - 1) * n_cols;
            sps(idx) = subplot(n_rows,n_cols,idx);
        end
    end
    xxtick = unique([ti_padd(1);-pre_s1_delay;0;t_set;t_set(end)+ti_padd(2)]);
    xxticklabel = num2cell(xxtick);
    xxticklabel(xxtick > 0 & xxtick < 1e3) = {''};
    set(sps,...
        axesopt.default,...
        'layer','top',...
        'plotboxaspectratiomode','auto',...
        'ylimspec','tight');
    set(sps(1+[0,n_cols*[1,3]]),...
        'xlim',[0,max(t_set)]+ti_padd,...
        'xtick',xxtick,...
        'xticklabel',xxticklabel);
    set(sps(2+[0,n_cols*[1,3]]),...
        'xlim',[0,isi],...
        'xtick',linspace(0,isi,5));
    set(sps(3+[0,n_cols*[1,3]]),...
        'xlim',[0,max(t_set)]+ti_padd,...
        'xtick',xxtick,...
        'xticklabel',xxticklabel);
    set(sps(2+[0,1,2,3]*n_cols),...
        'xlim',[0,isi]+ti_padd,...
        'xtick',unique([[0,isi],[0,isi]+ti_padd]));
    set(sps((1:n_cols)+[0;n_cols*2]),...
        'xcolor','none');
    xlabel(sps(1+n_cols*1),'Time since T_1 onset (s)');
    xlabel(sps(2+n_cols*1),'Time since ISI onset (s)');
    xlabel(sps(3+n_cols*1),'Time since T_2 onset (s)');
    xlabel(sps(1+n_cols*3),'Time since T_1 onset (s)');
    xlabel(sps(2+n_cols*3),'Time since ISI onset (s)');
    xlabel(sps(3+n_cols*3),'Time since T_2 onset (s)');
    ylabel(sps(1),'Firing rate (Hz)');
    ylabel(sps(2),'Firing rate (Hz)');
    ylabel(sps(3),'Firing rate (Hz)');
    ylabel(sps(1+n_cols*2),'Firing rate (Hz)');
    ylabel(sps(2+n_cols*2),'Firing rate (Hz)');
    ylabel(sps(3+n_cols*2),'Firing rate (Hz)');
    ylabel(sps(1+n_cols),'Trial #');
    ylabel(sps(2+n_cols),'Trial #');
    ylabel(sps(3+n_cols),'Trial #');
    ylabel(sps(1+n_cols*3),'Trial #');
    ylabel(sps(2+n_cols*3),'Trial #');
    ylabel(sps(3+n_cols*3),'Trial #');
    
    % waveform axes
    axwav = axes('position',[.91,.5,.075,.15],...
        'nextplot','add',...
        'xlimspec','tight',...
        'ylimspec','tight',...
        'box','off',...
        'xcolor','none',...
        'ycolor','none');
    
    % preallocation
    s1i1_n_trial_counter = 0;
    s1i2_n_trial_counter = 0;
    isit1_n_trial_counter = 0;
    isit2_n_trial_counter = 0;
    s2i2_n_trial_counter = 0;
    s2i1_n_trial_counter = 0;
    s1i1_boundaries = nan(n_i,1);
    s1i2_boundaries = nan(n_i,1);
    isit1_boundaries = nan(n_t,1);
    isit2_boundaries = nan(n_t,1);
    s2i2_boundaries = nan(n_i,1);
    s2i1_boundaries = nan(n_i,1);
    
    % iterate through intensities
    for ii = 1 : n_i
        i1_flags = i1 == i_set(ii);
        s1i1_spike_flags = ...
            valid_flags & ...
            neuron_flags & ...
            i1_flags;
        if sum(s1i1_spike_flags) == 0
            continue;
        end
        
        % fetch spike counts & compute spike rates
        s1i1_spike_counts = data.FakeFR(s1i1_spike_flags,:);
        s1i1_spike_rates = conv2(...
            1,kernel.pdf,s1i1_spike_counts,'valid')' / psthbin * 1e3;
        s1i1_n_trials = size(s1i1_spike_counts,1);
        s1i1_n_tbins = range(xlim(sps(1)))  * psthbin;
        
        % S1-aligned, I1-split spike rates
        s1i1_alignment_onset = ...
            pre_init_padding + ...
            pre_s1_delay(s1i1_spike_flags);
        s1i1_alignment_flags = ...
            valid_time >= s1i1_alignment_onset + min(xlim(sps(1))) & ...
            valid_time < s1i1_alignment_onset + t1(s1i1_spike_flags);
        s1i1_chunk_flags = ...
            valid_time >= s1i1_alignment_onset + min(xlim(sps(1))) & ...
            valid_time < s1i1_alignment_onset + max(xlim(sps(1)));
        s1i1_spkrates = s1i1_spike_rates;
        s1i1_spkrates(~s1i1_alignment_flags') = nan;
        s1i1_spkrates = reshape(...
            s1i1_spkrates(s1i1_chunk_flags'),[s1i1_n_tbins,s1i1_n_trials])';
        
        % time selection
        time2plot = min(xlim(sps(1))) + psthbin : psthbin : max(xlim(sps(1)));
        time_flags = time2plot <= max(xlim(sps(1)));
        
        % compute mean spike density function
        s1i1_mu = nanmean(s1i1_spkrates(:,time_flags),1);
        s1i1_std = nanstd(s1i1_spkrates(:,time_flags),0,1);
        s1i1_trials_throughtime = sum(~isnan(s1i1_spkrates),1);
        s1i1_sem = s1i1_std ./ sqrt(s1i1_trials_throughtime);
        
        % flag current stimulus period
        nan_flags = isnan(s1i1_mu);
        onset_flags = time2plot <= 0 & [time2plot(2:end),nan] > 0;
        offset_flags = diff([nan_flags,true]) == 1;
        flagged_time = time2plot(~nan_flags);
        
        % patch s.e.m.
        s1i1_xpatch = [flagged_time,fliplr(flagged_time)];
        s1i1_ypatch = [s1i1_mu(~nan_flags)-s1i1_sem(~nan_flags),...
            fliplr(s1i1_mu(~nan_flags)+s1i1_sem(~nan_flags))];
        patch_alpha = [s1i1_trials_throughtime(~nan_flags),...
            fliplr(s1i1_trials_throughtime(~nan_flags))];
        patch_alpha = (patch_alpha - min(s1i1_trials_throughtime)) / ...
            range(s1i1_trials_throughtime);
        patch_alpha = patch_alpha * .25 + .05;
        patch(sps(1),s1i1_xpatch,s1i1_ypatch,i1_clrs(ii,:),...
            'facevertexalphadata',patch_alpha',...
            'alphadatamapping','none',...
            'facealpha','interp',...
            'edgecolor','none');
        
        % patch average activity
        s1i1_xpatch = flagged_time(~nan_flags);
        s1i1_ypatch = s1i1_mu(~nan_flags);
        s1i1_ypatch(end) = nan;
        patch_alpha = s1i1_trials_throughtime(~nan_flags);
        patch_alpha = (patch_alpha - min(s1i1_trials_throughtime)) / ...
            range(s1i1_trials_throughtime);
        patch_alpha = patch_alpha * .95 + .05;
        patch(sps(1),s1i1_xpatch,s1i1_ypatch,0,...
            'facevertexalphadata',patch_alpha',...
            'alphadatamapping','none',...
            'edgealpha','interp',...
            'edgecolor',i1_clrs(ii,:),...
            'linewidth',1.5);
        
        % plot onset & offset
        plot(sps(1),time2plot(onset_flags),s1i1_mu(onset_flags),...
            'linewidth',1.5,...
            'marker','o',...
            'markersize',7.5,...
            'markerfacecolor','w',...
            'markeredgecolor',i1_clrs(ii,:));
        
        % plot I1 raster
        s1i1_time_mat = padded_time - (...
            pre_init_padding + ...
            pre_s1_delay(s1i1_spike_flags));
        s1i1_trial_idcs = (1 : s1i1_n_trials)' + s1i1_n_trial_counter;
        s1i1_trial_mat = repmat(s1i1_trial_idcs,1,n_paddedtimebins);
        s1i1_spike_trials = s1i1_trial_mat(s1i1_spike_counts >= 1);
        s1i1_spike_times = s1i1_time_mat(s1i1_spike_counts >= 1);
        trial_sorter = [t1(s1i1_spike_flags),prev_choice(s1i1_spike_flags)];
        [~,sorted_idcs] = sortrows(trial_sorter,[1,-2]);
        [~,resorted_idcs] = sortrows(sorted_idcs);
        resorted_idcs = resorted_idcs + s1i1_n_trial_counter;
        s1i1_sorted_trials = resorted_idcs(s1i1_spike_trials - s1i1_n_trial_counter);
        plot(sps(1+n_cols),s1i1_spike_times,s1i1_sorted_trials,...
            'color','k',...
            'marker',spike_marker,...
            'markersize',spike_markersize,...
            'linestyle','none');
        
        % plot raster bands
        xpatch = min(xlim(sps(1))) + ...
            [0,1,1,0] .* range(xlim(sps(1))) * .1/3;
        ypatch = [.5,.5,s1i1_n_trials+.5,s1i1_n_trials+.5] + s1i1_n_trial_counter;
        patch(sps(1+n_cols),xpatch,ypatch,i1_clrs(ii,:),...
            'linewidth',1.5,...
            'facealpha',.75,...
            'edgecolor','none');
        
        % update trial counters
        s1i1_n_trial_counter = s1i1_n_trial_counter + s1i1_n_trials;
        s1i1_boundaries(ii) = s1i1_n_trials;
    end
    
    % iterate through intensities
    for ii = 1 : n_i
        i2_flags = i2 == i_set(ii);
        s1i2_spike_flags = ...
            valid_flags & ...
            neuron_flags & ...
            i2_flags;
        if sum(s1i2_spike_flags) == 0
            continue;
        end
        
        % fetch spike counts & compute spike rates
        s1i2_spike_counts = data.FakeFR(s1i2_spike_flags,:);
        s1i2_spike_rates = conv2(...
            1,kernel.pdf,s1i2_spike_counts,'valid')' / psthbin * 1e3;
        s1i2_n_trials = size(s1i2_spike_counts,1);
        s1i2_n_tbins = range(xlim(sps(1)))  * psthbin;
        
        % S1-aligned, I1-split spike rates
        s1i2_alignment_onset = ...
            pre_init_padding + ...
            pre_s1_delay(s1i2_spike_flags);
        s1i2_alignment_flags = ...
            valid_time >= s1i2_alignment_onset + min(xlim(sps(1))) & ...
            valid_time < s1i2_alignment_onset + t1(s1i2_spike_flags);
        s1i2_chunk_flags = ...
            valid_time >= s1i2_alignment_onset + min(xlim(sps(1))) & ...
            valid_time < s1i2_alignment_onset + max(xlim(sps(1)));
        s1i2_spkrates = s1i2_spike_rates;
        s1i2_spkrates(~s1i2_alignment_flags') = nan;
        s1i2_spkrates = reshape(...
            s1i2_spkrates(s1i2_chunk_flags'),[s1i2_n_tbins,s1i2_n_trials])';
        
        % time selection
        time2plot = min(xlim(sps(1))) + psthbin : psthbin : max(xlim(sps(1)));
        time_flags = time2plot <= max(xlim(sps(1)));
        
        % compute mean spike density function
        s1i2_mu = nanmean(s1i2_spkrates(:,time_flags),1);
        s1i2_std = nanstd(s1i2_spkrates(:,time_flags),0,1);
        s1i2_trials_throughtime = sum(~isnan(s1i2_spkrates),1);
        s1i2_sem = s1i2_std ./ sqrt(s1i2_trials_throughtime);
        
        % flag current stimulus period
        nan_flags = isnan(s1i2_mu);
        onset_flags = time2plot <= 0 & [time2plot(2:end),nan] > 0;
        offset_flags = diff([nan_flags,true]) == 1;
        flagged_time = time2plot(~nan_flags);
        
        % patch s.e.m.
        s1i2_xpatch = [flagged_time,fliplr(flagged_time)];
        s1i2_ypatch = [s1i2_mu(~nan_flags)-s1i2_sem(~nan_flags),...
            fliplr(s1i2_mu(~nan_flags)+s1i2_sem(~nan_flags))];
        patch_alpha = [s1i2_trials_throughtime(~nan_flags),...
            fliplr(s1i2_trials_throughtime(~nan_flags))];
        patch_alpha = (patch_alpha - min(s1i2_trials_throughtime)) / ...
            range(s1i2_trials_throughtime);
        patch_alpha = patch_alpha * .25 + .05;
        patch(sps(1+n_cols*2),s1i2_xpatch,s1i2_ypatch,i2_clrs(ii,:),...
            'facevertexalphadata',patch_alpha',...
            'alphadatamapping','none',...
            'facealpha','interp',...
            'edgecolor','none');
        
        % patch average activity
        s1i2_xpatch = flagged_time(~nan_flags);
        s1i2_ypatch = s1i2_mu(~nan_flags);
        s1i2_ypatch(end) = nan;
        patch_alpha = s1i2_trials_throughtime(~nan_flags);
        patch_alpha = (patch_alpha - min(s1i2_trials_throughtime)) / ...
            range(s1i2_trials_throughtime);
        patch_alpha = patch_alpha * .95 + .05;
        patch(sps(1+n_cols*2),s1i2_xpatch,s1i2_ypatch,0,...
            'facevertexalphadata',patch_alpha',...
            'alphadatamapping','none',...
            'edgealpha','interp',...
            'edgecolor',i2_clrs(ii,:),...
            'linewidth',1.5);
        
        % plot onset & offset
        plot(sps(1+n_cols*2),time2plot(onset_flags),s1i2_mu(onset_flags),...
            'linewidth',1.5,...
            'marker','o',...
            'markersize',7.5,...
            'markerfacecolor','w',...
            'markeredgecolor',i2_clrs(ii,:));
        
        % plot I1 raster
        s1i2_time_mat = padded_time - (...
            pre_init_padding + ...
            pre_s1_delay(s1i2_spike_flags));
        s1i2_trial_idcs = (1 : s1i2_n_trials)' + s1i2_n_trial_counter;
        s1i2_trial_mat = repmat(s1i2_trial_idcs,1,n_paddedtimebins);
        s1i2_spike_trials = s1i2_trial_mat(s1i2_spike_counts >= 1);
        s1i2_spike_times = s1i2_time_mat(s1i2_spike_counts >= 1);
        trial_sorter = [t1(s1i2_spike_flags),prev_choice(s1i2_spike_flags)];
        [~,sorted_idcs] = sortrows(trial_sorter,[1,-2]);
        [~,resorted_idcs] = sortrows(sorted_idcs);
        resorted_idcs = resorted_idcs + s1i2_n_trial_counter;
        s1i2_sorted_trials = resorted_idcs(s1i2_spike_trials - s1i2_n_trial_counter);
        plot(sps(1+n_cols*3),s1i2_spike_times,s1i2_sorted_trials,...
            'color','k',...
            'marker',spike_marker,...
            'markersize',spike_markersize,...
            'linestyle','none');
        
        % plot raster bands
        xpatch = min(xlim(sps(1+n_cols*2))) + ...
            [0,1,1,0] .* range(xlim(sps(1+n_cols*2))) * .1/3;
        ypatch = [.5,.5,s1i2_n_trials+.5,s1i2_n_trials+.5] + s1i2_n_trial_counter;
        patch(sps(1+n_cols*3),xpatch,ypatch,i2_clrs(ii,:),...
            'linewidth',1.5,...
            'facealpha',.75,...
            'edgecolor','none');
        
        % update trial counters
        s1i2_n_trial_counter = s1i2_n_trial_counter + s1i2_n_trials;
        s1i2_boundaries(ii) = s1i2_n_trials;
    end
    
    % iterate through durations
    for tt = 1 : n_t
        t1_flags = t1 == t_set(tt);
        isit1_spike_flags = ...
            valid_flags & ...
            neuron_flags & ...
            t1_flags;
        if sum(isit1_spike_flags) == 0
            continue;
        end
        
        % fetch spike counts & compute spike rates
        isit1_spike_counts = data.FakeFR(isit1_spike_flags,:);
        isit1_spike_rates = conv2(...
            1,kernel.pdf,isit1_spike_counts,'valid')' / psthbin * 1e3;
        isit1_n_trials = size(isit1_spike_counts,1);
        isit1_n_tbins = range(xlim(sps(2))) * psthbin;
        
        % T2-aligned, T1-split spike rates
        isit1_alignment_onset = ...
            pre_init_padding + ...
            pre_s1_delay(isit1_spike_flags) + ...
            t1(isit1_spike_flags);
        isit1_alignment_flags = ...
            valid_time >= isit1_alignment_onset + min(xlim(sps(2))) & ...
            valid_time < isit1_alignment_onset + isi;
        isit1_chunk_flags = ...
            valid_time >= isit1_alignment_onset + min(xlim(sps(2))) & ...
            valid_time < isit1_alignment_onset + max(xlim(sps(2)));
        isit1_spkrates = isit1_spike_rates;
        isit1_spkrates(~isit1_alignment_flags') = nan;
        isit1_spkrates = reshape(...
            isit1_spkrates(isit1_chunk_flags'),[isit1_n_tbins,isit1_n_trials])';
        
        % time selection
        time2plot = min(xlim(sps(2))) + psthbin : psthbin : max(xlim(sps(2)));
        time_flags = time2plot <= max(xlim(sps(2)));
        
        % compute mean spike density function
        isit1_mu = nanmean(isit1_spkrates(:,time_flags),1);
        isit1_std = nanstd(isit1_spkrates(:,time_flags),0,1);
        isit1_trials_throughtime = sum(~isnan(isit1_spkrates),1);
        isit1_sem = isit1_std ./ sqrt(isit1_trials_throughtime);
        
        % flag current stimulus period
        nan_flags = isnan(isit1_mu);
        onset_flags = time2plot <= 0 & [time2plot(2:end),nan] > 0;
        offset_flags = diff([nan_flags,true]) == 1;
        flagged_time = time2plot(~nan_flags);
        
        % patch s.e.m.
        isit1_xpatch = [flagged_time,fliplr(flagged_time)];
        isit1_ypatch = [isit1_mu(~nan_flags)-isit1_sem(~nan_flags),...
            fliplr(isit1_mu(~nan_flags)+isit1_sem(~nan_flags))];
        patch_alpha = [isit1_trials_throughtime(~nan_flags),...
            fliplr(isit1_trials_throughtime(~nan_flags))].^0;
        patch_alpha = patch_alpha * .25 + .05;
        patch(sps(2),isit1_xpatch,isit1_ypatch,t1_clrs(tt,:),...
            'facevertexalphadata',patch_alpha',...
            'alphadatamapping','none',...
            'facealpha','interp',...
            'edgecolor','none');
        
        % patch average activity
        isit1_xpatch = flagged_time(~nan_flags);
        isit1_ypatch = isit1_mu(~nan_flags);
        isit1_ypatch(end) = nan;
        patch_alpha = isit1_trials_throughtime(~nan_flags).^0;
        patch_alpha = patch_alpha * .95 + .05;
        patch(sps(2),isit1_xpatch,isit1_ypatch,0,...
            'facevertexalphadata',patch_alpha',...
            'alphadatamapping','none',...
            'edgealpha','interp',...
            'edgecolor',t1_clrs(tt,:),...
            'linewidth',1.5);
        
        % plot onset & offset
        plot(sps(2),time2plot(onset_flags),isit1_mu(onset_flags),...
            'linewidth',1.5,...
            'marker','o',...
            'markersize',7.5,...
            'markerfacecolor','w',...
            'markeredgecolor',t1_clrs(tt,:));
        
        % plot T1 raster
        isit1_time_mat = padded_time - (...
            pre_init_padding + ...
            pre_s1_delay(isit1_spike_flags) + ...
            t1(isit1_spike_flags));
        isit1_trial_idcs = (1 : isit1_n_trials)' + isit1_n_trial_counter;
        isit1_trial_idcs_global = data.Trial(isit1_spike_flags);
        isit1_trial_mat = repmat(isit1_trial_idcs,1,n_paddedtimebins);
        isit1_spike_trials = isit1_trial_mat(isit1_spike_counts >= 1);
        isit1_spike_times = isit1_time_mat(isit1_spike_counts >= 1);
        trial_sorter = [t1(isit1_spike_flags),prev_choice(isit1_spike_flags)];
        [~,sorted_idcs] = sortrows(trial_sorter,[1,-2]);
        [~,resorted_idcs] = sortrows(sorted_idcs);
        resorted_idcs = resorted_idcs + isit1_n_trial_counter;
        isit1_sorted_trials = resorted_idcs(isit1_spike_trials - isit1_n_trial_counter);
        isit1_unsorted_trials = isit1_trial_idcs(isit1_spike_trials - isit1_n_trial_counter);
        plot(sps(2+n_cols),isit1_spike_times,isit1_spike_trials,...
            'color','k',...
            'marker',spike_marker,...
            'markersize',spike_markersize,...
            'linestyle','none');
        
        % plot raster bands
        xpatch = min(xlim(sps(2))) + ...
            [0,1,1,0] .* range(xlim(sps(2))) * .1/3;
        ypatch = [.5,.5,isit1_n_trials+.5,isit1_n_trials+.5] + isit1_n_trial_counter;
        patch(sps(2+n_cols),xpatch,ypatch,t1_clrs(tt,:),...
            'linewidth',1.5,...
            'facealpha',.75,...
            'edgecolor','none');
        
        % update trial counters
        isit1_n_trial_counter = isit1_n_trial_counter + isit1_n_trials;
        isit1_boundaries(tt) = isit1_n_trials;
    end
    
    % iterate through durations
    for tt = 1 : n_t
        t2_flags = t2 == t_set(tt);
        isit2_spike_flags = ...
            valid_flags & ...
            neuron_flags & ...
            t2_flags;
        if sum(isit2_spike_flags) == 0
            continue;
        end
        
        % fetch spike counts & compute spike rates
        isit2_spike_counts = data.FakeFR(isit2_spike_flags,:);
        isit2_spike_rates = conv2(...
            1,kernel.pdf,isit2_spike_counts,'valid')' / psthbin * 1e3;
        isit2_n_trials = size(isit2_spike_counts,1);
        isit2_n_tbins = range(xlim(sps(2))) * psthbin;
        
        % T2-aligned, T1-split spike rates
        isit2_alignment_onset = ...
            pre_init_padding + ...
            pre_s1_delay(isit2_spike_flags) + ...
            t1(isit2_spike_flags);
        isit2_alignment_flags = ...
            valid_time >= isit2_alignment_onset + min(xlim(sps(2))) & ...
            valid_time < isit2_alignment_onset + isi;
        isit2_chunk_flags = ...
            valid_time >= isit2_alignment_onset + min(xlim(sps(2))) & ...
            valid_time < isit2_alignment_onset + max(xlim(sps(2)));
        isit2_spkrates = isit2_spike_rates;
        isit2_spkrates(~isit2_alignment_flags') = nan;
        isit2_spkrates = reshape(...
            isit2_spkrates(isit2_chunk_flags'),[isit2_n_tbins,isit2_n_trials])';
        
        % time selection
        time2plot = min(xlim(sps(2))) + psthbin : psthbin : max(xlim(sps(2)));
        time_flags = time2plot <= max(xlim(sps(2)));
        
        % compute mean spike density function
        isit2_mu = nanmean(isit2_spkrates(:,time_flags),1);
        isit2_std = nanstd(isit2_spkrates(:,time_flags),0,1);
        isit2_trials_throughtime = sum(~isnan(isit2_spkrates),1);
        isit2_sem = isit2_std ./ sqrt(isit2_trials_throughtime);
        
        % flag current stimulus period
        nan_flags = isnan(isit2_mu);
        onset_flags = time2plot <= 0 & [time2plot(2:end),nan] > 0;
        offset_flags = diff([nan_flags,true]) == 1;
        flagged_time = time2plot(~nan_flags);
        
        % patch s.e.m.
        isit2_xpatch = [flagged_time,fliplr(flagged_time)];
        isit2_ypatch = [isit2_mu(~nan_flags)-isit2_sem(~nan_flags),...
            fliplr(isit2_mu(~nan_flags)+isit2_sem(~nan_flags))];
        patch_alpha = [isit2_trials_throughtime(~nan_flags),...
            fliplr(isit2_trials_throughtime(~nan_flags))].^0;
        patch_alpha = patch_alpha * .25 + .05;
        patch(sps(2+n_cols*2),isit2_xpatch,isit2_ypatch,t2_clrs(tt,:),...
            'facevertexalphadata',patch_alpha',...
            'alphadatamapping','none',...
            'facealpha','interp',...
            'edgecolor','none');
        
        % patch average activity
        isit2_xpatch = flagged_time(~nan_flags);
        isit2_ypatch = isit2_mu(~nan_flags);
        isit2_ypatch(end) = nan;
        patch_alpha = isit2_trials_throughtime(~nan_flags).^0;
        patch_alpha = patch_alpha * .95 + .05;
        patch(sps(2+n_cols*2),isit2_xpatch,isit2_ypatch,0,...
            'facevertexalphadata',patch_alpha',...
            'alphadatamapping','none',...
            'edgealpha','interp',...
            'edgecolor',t2_clrs(tt,:),...
            'linewidth',1.5);
        
        % plot onset & offset
        plot(sps(2+n_cols*2),time2plot(onset_flags),isit2_mu(onset_flags),...
            'linewidth',1.5,...
            'marker','o',...
            'markersize',7.5,...
            'markerfacecolor','w',...
            'markeredgecolor',t2_clrs(tt,:));
        
        % plot T1 raster
        isit2_time_mat = padded_time - (...
            pre_init_padding + ...
            pre_s1_delay(isit2_spike_flags) + ...
            t1(isit2_spike_flags));
        isit2_trial_idcs = (1 : isit2_n_trials)' + isit2_n_trial_counter;
        isit2_trial_idcs_global = data.Trial(isit2_spike_flags);
        isit2_trial_mat = repmat(isit2_trial_idcs,1,n_paddedtimebins);
        isit2_spike_trials = isit2_trial_mat(isit2_spike_counts >= 1);
        isit2_spike_times = isit2_time_mat(isit2_spike_counts >= 1);
        trial_sorter = [t1(isit2_spike_flags),prev_choice(isit2_spike_flags)];
        [~,sorted_idcs] = sortrows(trial_sorter,[1,-2]);
        [~,resorted_idcs] = sortrows(sorted_idcs);
        resorted_idcs = resorted_idcs + isit2_n_trial_counter;
        isit2_sorted_trials = resorted_idcs(isit2_spike_trials - isit2_n_trial_counter);
        isit2_unsorted_trials = isit2_trial_idcs(isit2_spike_trials - isit2_n_trial_counter);
        plot(sps(2+n_cols*3),isit2_spike_times,isit2_spike_trials,...
            'color','k',...
            'marker',spike_marker,...
            'markersize',spike_markersize,...
            'linestyle','none');
        
        % plot raster bands
        xpatch = min(xlim(sps(2+n_cols*2))) + ...
            [0,1,1,0] .* range(xlim(sps(2+n_cols*2))) * .1/3;
        ypatch = [.5,.5,isit2_n_trials+.5,isit2_n_trials+.5] + isit2_n_trial_counter;
        patch(sps(2+n_cols*3),xpatch,ypatch,t2_clrs(tt,:),...
            'linewidth',1.5,...
            'facealpha',.75,...
            'edgecolor','none');
        
        % update trial counters
        isit2_n_trial_counter = isit2_n_trial_counter + isit2_n_trials;
        isit2_boundaries(tt) = isit2_n_trials;
    end
    
    % iterate through intensities
    for ii = 1 : n_i
        i2_flags = i2 == i_set(ii);
        s2i2_spike_flags = ...
            valid_flags & ...
            neuron_flags & ...
            i2_flags;
        if sum(s2i2_spike_flags) == 0
            continue;
        end
        
        % fetch spike counts & compute spike rates
        s2i2_spike_counts = data.FakeFR(s2i2_spike_flags,:);
        s2i2_spike_rates = conv2(...
            1,kernel.pdf,s2i2_spike_counts,'valid')' / psthbin * 1e3;
        s2i2_n_trials = size(s2i2_spike_counts,1);
        s2i2_n_tbins = range(xlim(sps(3)))  * psthbin;
        
        % S2-aligned, I2-split spike rates
        s2i2_alignment_onset = ...
            pre_init_padding + ...
            pre_s1_delay(s2i2_spike_flags) + ...
            t1(s2i2_spike_flags) + ...
            isi;
        s2i2_alignment_flags = ...
            valid_time >= s2i2_alignment_onset + min(xlim(sps(3))) & ...
            valid_time < s2i2_alignment_onset + t2(s2i2_spike_flags);
        s2i2_chunk_flags = ...
            valid_time >= s2i2_alignment_onset + min(xlim(sps(3))) & ...
            valid_time < s2i2_alignment_onset + max(xlim(sps(3)));
        s2i2_spkrates = s2i2_spike_rates;
        s2i2_spkrates(~s2i2_alignment_flags') = nan;
        s2i2_spkrates = reshape(...
            s2i2_spkrates(s2i2_chunk_flags'),[s2i2_n_tbins,s2i2_n_trials])';
        
        % time selection
        time2plot = min(xlim(sps(3))) + psthbin : psthbin : max(xlim(sps(3)));
        time_flags = time2plot <= max(xlim(sps(3)));
        
        % compute mean spike density function
        s2i2_mu = nanmean(s2i2_spkrates(:,time_flags),1);
        s2i2_std = nanstd(s2i2_spkrates(:,time_flags),0,1);
        s2i2_trials_throughtime = sum(~isnan(s2i2_spkrates),1);
        s2i2_sem = s2i2_std ./ sqrt(s2i2_trials_throughtime);
        
        % flag current stimulus period
        nan_flags = isnan(s2i2_mu);
        onset_flags = time2plot <= 0 & [time2plot(2:end),nan] > 0;
        offset_flags = diff([nan_flags,true]) == 1;
        flagged_time = time2plot(~nan_flags);
        
        % patch s.e.m.
        s2i2_xpatch = [flagged_time,fliplr(flagged_time)];
        s2i2_ypatch = [s2i2_mu(~nan_flags)-s2i2_sem(~nan_flags),...
            fliplr(s2i2_mu(~nan_flags)+s2i2_sem(~nan_flags))];
        patch_alpha = [s2i2_trials_throughtime(~nan_flags),...
            fliplr(s2i2_trials_throughtime(~nan_flags))];
        patch_alpha = (patch_alpha - min(s2i2_trials_throughtime)) / ...
            range(s2i2_trials_throughtime);
        patch_alpha = patch_alpha * .25 + .05;
        patch(sps(3),s2i2_xpatch,s2i2_ypatch,i2_clrs(ii,:),...
            'facevertexalphadata',patch_alpha',...
            'alphadatamapping','none',...
            'facealpha','interp',...
            'edgecolor','none');
        
        % patch average activity
        s2i2_xpatch = flagged_time(~nan_flags);
        s2i2_ypatch = s2i2_mu(~nan_flags);
        s2i2_ypatch(end) = nan;
        patch_alpha = s2i2_trials_throughtime(~nan_flags);
        patch_alpha = (patch_alpha - min(s2i2_trials_throughtime)) / ...
            range(s2i2_trials_throughtime);
        patch_alpha = patch_alpha * .95 + .05;
        patch(sps(3),s2i2_xpatch,s2i2_ypatch,0,...
            'facevertexalphadata',patch_alpha',...
            'alphadatamapping','none',...
            'edgealpha','interp',...
            'edgecolor',i2_clrs(ii,:),...
            'linewidth',1.5);
        
        % plot onset & offset
        plot(sps(3),time2plot(onset_flags),s2i2_mu(onset_flags),...
            'linewidth',1.5,...
            'marker','o',...
            'markersize',7.5,...
            'markerfacecolor','w',...
            'markeredgecolor',i2_clrs(ii,:));
        
        % plot I2 raster
        s2i2_time_mat = padded_time - (...
            pre_init_padding + ...
            pre_s1_delay(s2i2_spike_flags) + ...
            t1(s2i2_spike_flags) + ...
            isi);
        s2i2_trial_idcs = (1 : s2i2_n_trials)' + s2i2_n_trial_counter;
        s2i2_trial_mat = repmat(s2i2_trial_idcs,1,n_paddedtimebins);
        s2i2_spike_trials = s2i2_trial_mat(s2i2_spike_counts >= 1);
        s2i2_spike_times = s2i2_time_mat(s2i2_spike_counts >= 1);
        trial_sorter = [t2(s2i2_spike_flags),choice(s2i2_spike_flags)];
        [~,sorted_idcs] = sortrows(trial_sorter,[1,-2]);
        [~,resorted_idcs] = sortrows(sorted_idcs);
        resorted_idcs = resorted_idcs + s2i2_n_trial_counter;
        s2i2_sorted_trials = resorted_idcs(s2i2_spike_trials - s2i2_n_trial_counter);
        plot(sps(3+n_cols),s2i2_spike_times,s2i2_sorted_trials,...
            'color','k',...
            'marker',spike_marker,...
            'markersize',spike_markersize,...
            'linestyle','none');
        
        % plot raster bands
        xpatch = min(xlim(sps(3))) + ...
            [0,1,1,0] .* range(xlim(sps(3))) * .1/3;
        ypatch = [.5,.5,s2i2_n_trials+.5,s2i2_n_trials+.5] + s2i2_n_trial_counter;
        patch(sps(3+n_cols),xpatch,ypatch,i2_clrs(ii,:),...
            'linewidth',1.5,...
            'facealpha',.75,...
            'edgecolor','none');
        
        % update trial counters
        s2i2_n_trial_counter = s2i2_n_trial_counter + s2i2_n_trials;
        s2i2_boundaries(ii) = s2i2_n_trials;
    end
    
    % iterate through intensities
    for ii = 1 : n_i
        i1_flags = i1 == i_set(ii);
        s2i1_spike_flags = ...
            valid_flags & ...
            neuron_flags & ...
            i1_flags;
        if sum(s2i1_spike_flags) == 0
            continue;
        end
        
        % fetch spike counts & compute spike rates
        s2i1_spike_counts = data.FakeFR(s2i1_spike_flags,:);
        s2i1_spike_rates = conv2(...
            1,kernel.pdf,s2i1_spike_counts,'valid')' / psthbin * 1e3;
        s2i1_n_trials = size(s2i1_spike_counts,1);
        s2i1_n_tbins = range(xlim(sps(3)))  * psthbin;
        
        % S2-aligned, I2-split spike rates
        s2i1_alignment_onset = ...
            pre_init_padding + ...
            pre_s1_delay(s2i1_spike_flags) + ...
            t1(s2i1_spike_flags) + ...
            isi;
        s2i1_alignment_flags = ...
            valid_time >= s2i1_alignment_onset + min(xlim(sps(3))) & ...
            valid_time < s2i1_alignment_onset + t2(s2i1_spike_flags);
        s2i1_chunk_flags = ...
            valid_time >= s2i1_alignment_onset + min(xlim(sps(3))) & ...
            valid_time < s2i1_alignment_onset + max(xlim(sps(3)));
        s2i1_spkrates = s2i1_spike_rates;
        s2i1_spkrates(~s2i1_alignment_flags') = nan;
        s2i1_spkrates = reshape(...
            s2i1_spkrates(s2i1_chunk_flags'),[s2i1_n_tbins,s2i1_n_trials])';
        
        % time selection
        time2plot = min(xlim(sps(3))) + psthbin : psthbin : max(xlim(sps(3)));
        time_flags = time2plot <= max(xlim(sps(3)));
        
        % compute mean spike density function
        s2i1_mu = nanmean(s2i1_spkrates(:,time_flags),1);
        s2i1_std = nanstd(s2i1_spkrates(:,time_flags),0,1);
        s2i1_trials_throughtime = sum(~isnan(s2i1_spkrates),1);
        s2i1_sem = s2i1_std ./ sqrt(s2i1_trials_throughtime);
        
        % flag current stimulus period
        nan_flags = isnan(s2i1_mu);
        onset_flags = time2plot <= 0 & [time2plot(2:end),nan] > 0;
        offset_flags = diff([nan_flags,true]) == 1;
        flagged_time = time2plot(~nan_flags);
        
        % patch s.e.m.
        s2i1_xpatch = [flagged_time,fliplr(flagged_time)];
        s2i1_ypatch = [s2i1_mu(~nan_flags)-s2i1_sem(~nan_flags),...
            fliplr(s2i1_mu(~nan_flags)+s2i1_sem(~nan_flags))];
        patch_alpha = [s2i1_trials_throughtime(~nan_flags),...
            fliplr(s2i1_trials_throughtime(~nan_flags))];
        patch_alpha = (patch_alpha - min(s2i1_trials_throughtime)) / ...
            range(s2i1_trials_throughtime);
        patch_alpha = patch_alpha * .25 + .05;
        patch(sps(3+n_cols*2),s2i1_xpatch,s2i1_ypatch,i1_clrs(ii,:),...
            'facevertexalphadata',patch_alpha',...
            'alphadatamapping','none',...
            'facealpha','interp',...
            'edgecolor','none');
        
        % patch average activity
        s2i1_xpatch = flagged_time(~nan_flags);
        s2i1_ypatch = s2i1_mu(~nan_flags);
        s2i1_ypatch(end) = nan;
        patch_alpha = s2i1_trials_throughtime(~nan_flags);
        patch_alpha = (patch_alpha - min(s2i1_trials_throughtime)) / ...
            range(s2i1_trials_throughtime);
        patch_alpha = patch_alpha * .95 + .05;
        patch(sps(3+n_cols*2),s2i1_xpatch,s2i1_ypatch,0,...
            'facevertexalphadata',patch_alpha',...
            'alphadatamapping','none',...
            'edgealpha','interp',...
            'edgecolor',i1_clrs(ii,:),...
            'linewidth',1.5);
        
        % plot onset & offset
        plot(sps(3+n_cols*2),time2plot(onset_flags),s2i1_mu(onset_flags),...
            'linewidth',1.5,...
            'marker','o',...
            'markersize',7.5,...
            'markerfacecolor','w',...
            'markeredgecolor',i1_clrs(ii,:));
        
        % plot I2 raster
        s2i1_time_mat = padded_time - (...
            pre_init_padding + ...
            pre_s1_delay(s2i1_spike_flags) + ...
            t1(s2i1_spike_flags) + ...
            isi);
        s2i1_trial_idcs = (1 : s2i1_n_trials)' + s2i1_n_trial_counter;
        s2i1_trial_mat = repmat(s2i1_trial_idcs,1,n_paddedtimebins);
        s2i1_spike_trials = s2i1_trial_mat(s2i1_spike_counts >= 1);
        s2i1_spike_times = s2i1_time_mat(s2i1_spike_counts >= 1);
        trial_sorter = [t2(s2i1_spike_flags),choice(s2i1_spike_flags)];
        [~,sorted_idcs] = sortrows(trial_sorter,[1,-2]);
        [~,resorted_idcs] = sortrows(sorted_idcs);
        resorted_idcs = resorted_idcs + s2i1_n_trial_counter;
        s2i1_sorted_trials = resorted_idcs(s2i1_spike_trials - s2i1_n_trial_counter);
        plot(sps(3+n_cols*3),s2i1_spike_times,s2i1_sorted_trials,...
            'color','k',...
            'marker',spike_marker,...
            'markersize',spike_markersize,...
            'linestyle','none');
        
        % plot raster bands
        xpatch = min(xlim(sps(3+n_cols*2))) + ...
            [0,1,1,0] .* range(xlim(sps(3+n_cols*2))) * .1/3;
        ypatch = [.5,.5,s2i1_n_trials+.5,s2i1_n_trials+.5] + s2i1_n_trial_counter;
        patch(sps(3+n_cols*3),xpatch,ypatch,i1_clrs(ii,:),...
            'linewidth',1.5,...
            'facealpha',.75,...
            'edgecolor','none');
        
        % update trial counters
        s2i1_n_trial_counter = s2i1_n_trial_counter + s2i1_n_trials;
        s2i1_boundaries(ii) = s2i1_n_trials;
    end
    
    % text annotations
    mean_formula = strjoin(repmat({'%.1f'},1,n_i),' | ');
    text(sps(2),.05,1.3,sprintf(['mean FR: ',mean_formula],...
        nanmean(mean_frs(neurons2plot(nn),:,:),2)),...
        'horizontalalignment','left',...
        'verticalalignment','top',...
        'units','normalized');
    trialcount_formula = strjoin(repmat({'%i'},1,n_i),' | ');
    text(sps(2),.05,1.2,sprintf(['min. trial counts: ',trialcount_formula],...
        min(trial_type_counts(neurons2plot(nn),end-1,:),[],2)),...
        'horizontalalignment','left',...
        'verticalalignment','top',...
        'units','normalized');
    text(sps(2),.05,1.1,sprintf('stability coeff.: %.2f',...
        stability_coeffs(neurons2plot(nn))),...
        'horizontalalignment','left',...
        'verticalalignment','top',...
        'units','normalized');
    text(sps(2),1,1.3,sprintf('trial count flag: %i',...
        trial_count_flags(neurons2plot(nn))),...
        'horizontalalignment','right',...
        'verticalalignment','top',...
        'units','normalized');
    text(sps(2),1,1.2,sprintf('FR flag: %i',...
        mean_fr_flags(neurons2plot(nn))),...
        'horizontalalignment','right',...
        'verticalalignment','top',...
        'units','normalized');
    text(sps(2),1,1.1,sprintf('stability flag: %i',...
        stability_flags(neurons2plot(nn))),...
        'horizontalalignment','right',...
        'verticalalignment','top',...
        'units','normalized');
    
    if all(isnan(isit1_boundaries)) || ...
            all(isnan(isit2_boundaries)) || ...
            all(isnan(s1i1_boundaries)) || ...
            all(isnan(s1i2_boundaries)) || ...
            all(isnan(s2i2_boundaries)) || ...
            all(isnan(s2i1_boundaries))
        continue;
    end

    % axes updates
    set(sps(1+n_cols),...
        'ylim',[1,nansum(s1i1_boundaries)]+[-1,1]*.5,...
        'ytick',unique([1;cumsum(s1i1_boundaries,'omitnan')]));
    set(sps(1+n_cols*3),...
        'ylim',[1,nansum(s1i2_boundaries)]+[-1,1]*.5,...
        'ytick',unique([1;cumsum(s1i2_boundaries,'omitnan')]));
    set(sps(2+n_cols),...
        'ylim',[1,nansum(isit1_boundaries)]+[-1,1]*.5,...
        'ytick',unique([1;cumsum(isit1_boundaries,'omitnan')]));
    set(sps(2+n_cols*3),...
        'ylim',[1,nansum(isit2_boundaries)]+[-1,1]*.5,...
        'ytick',unique([1;cumsum(isit2_boundaries,'omitnan')]));
    set(sps(3+n_cols),...
        'ylim',[1,nansum(s2i2_boundaries)]+[-1,1]*.5,...
        'ytick',unique([1;cumsum(s2i2_boundaries,'omitnan')]));
    set(sps(3+n_cols*3),...
        'ylim',[1,nansum(s2i1_boundaries)]+[-1,1]*.5,...
        'ytick',unique([1;cumsum(s2i1_boundaries,'omitnan')]));
    
    % plot significance
    if any(significance_mask_s1.I_1(:,neurons2plot(nn)))
        for gg = 1 : n_glm
            if sign(coeff_map_s1.I_1(gg,neurons2plot(nn))) > 0
                clr = i1_clrs(end,:);
            else
                clr = i1_clrs(1,:);
            end
            linewidth = 2.5 * abs(significance_mask_s1.I_1(gg,neurons2plot(nn)));
            if significance_mask_s1.I_1(gg,neurons2plot(nn))
                plot(sps(1),...
                    glm_time(gg)+[0,glm_step],...
                    [1,1]*max(ylim(sps(1)))*1,...
                    'color',clr,...
                    'linestyle','--',...
                    'linewidth',linewidth);
            end
        end
    end
    if any(significance_mask_s1.I_2(:,neurons2plot(nn)))
        for gg = 1 : n_glm
            if sign(coeff_map_s1.I_2(gg,neurons2plot(nn))) > 0
                clr = i2_clrs(end,:);
            else
                clr = i2_clrs(1,:);
            end
            linewidth = 2.5 * abs(significance_mask_s1.I_2(gg,neurons2plot(nn)));
            if significance_mask_s1.I_2(gg,neurons2plot(nn))
                plot(sps(1+n_cols*2),...
                    glm_time(gg)+[0,glm_step],...
                    [1,1]*max(ylim(sps(1)))*1,...
                    'color',clr,...
                    'linestyle','--',...
                    'linewidth',linewidth);
            end
        end
    end
    if any(significance_mask_s2.I_2(:,neurons2plot(nn)))
        for gg = 1 : n_glm
            if sign(coeff_map_s2.I_2(gg,neurons2plot(nn))) > 0
                clr = i2_clrs(end,:);
            else
                clr = i2_clrs(1,:);
            end
            linewidth = 2.5 * abs(significance_mask_s2.I_2(gg,neurons2plot(nn)));
            if significance_mask_s2.I_2(gg,neurons2plot(nn))
                plot(sps(3),...
                    glm_time(gg)+[0,glm_step],...
                    [1,1]*max(ylim(sps(3)))*1,...
                    'color',clr,...
                    'linestyle','--',...
                    'linewidth',linewidth);
            end
        end
    end
    if any(significance_mask_s2.I_1(:,neurons2plot(nn)))
        for gg = 1 : n_glm
            if sign(coeff_map_s2.I_1(gg,neurons2plot(nn))) > 0
                clr = i1_clrs(end,:);
            else
                clr = i1_clrs(1,:);
            end
            linewidth = 2.5 * abs(significance_mask_s2.I_1(gg,neurons2plot(nn)));
            if significance_mask_s2.I_1(gg,neurons2plot(nn))
                plot(sps(3+n_cols*2),...
                    glm_time(gg)+[0,glm_step],...
                    [1,1]*max(ylim(sps(3+n_cols*2)))*1,...
                    'color',clr,...
                    'linestyle','--',...
                    'linewidth',linewidth);
            end
        end
    end
    
    % plot waveform
    plot(axwav,data.Shape(neurons2plot(nn),:),...
        'color','k',...
        'linewidth',1.5);
    
    % plot whether or not this passed selection
    if ismember(neurons2plot(nn),flagged_neurons)
        clr = [0,1,0];
    else
        clr = [1,0,0];
    end
    plot(axwav,max(xlim(axwav)),min(ylim(axwav)),...
        'marker','.',...
        'markersize',25,...
        'color',clr);
    
    % save figure
    if want2save
        try
            % save settings
            png_file = fullfile(raster_path,'fake',[get(fig,'name'),'.png']);
            print(fig,png_file,'-dpng','-r300','-painters');
            close(fig);
        catch
            close(fig);
        end
    else
        pause(1);
        close(fig);
    end
end
