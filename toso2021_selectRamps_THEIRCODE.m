%% initialization
if ~exist('DataB','var')
    load(data_file);
end

%% ---------------------------- THEIR CODE ----------------------------- %%
Features=NeuronType_Striatum(DataB);
Neurons=unique(DataB.Info.NeuronNumb,'rows');
idN=find(Features(:,3)==0);
Neurons(idN)=[];
AllNeurons=Neurons;
[Neurons,AllRamps,StereoCrit,MeanFR]=Selectramp(DataB,Neurons);
% [~,AllStereo]=Selectstereo(DataB,Neurons);

%% parse their ramp clusters

% preallocation
ramp_idcs = struct();
nonramp_idcs = struct();

% S1-aligned "ramps"
% ramp_idcs.s1_onset.up = find(sum(AllRamps(:,1),2)>0);
% ramp_idcs.s1_onset.down = find(sum(AllRamps(:,2),2)>0);
% ramp_idcs.s1_onset.both = unique([...
%     ramp_idcs.s1_onset.up;...
%     ramp_idcs.s1_onset.down]);
% ramp_idcs.s1_offset.up = find(sum(AllRamps(:,3),2)>0);
% ramp_idcs.s1_offset.down = find(sum(AllRamps(:,4),2)>0);
% ramp_idcs.s1_offset.both = unique([...
%     ramp_idcs.s1_offset.up;...
%     ramp_idcs.s1_offset.down]);
% ramp_idcs.s1.up = unique([...
%     ramp_idcs.s1_onset.up;...
%     ramp_idcs.s1_offset.up]);
% ramp_idcs.s1.down = unique([...
%     ramp_idcs.s1_onset.down;...
%     ramp_idcs.s1_offset.down]);
% ramp_idcs.s1.both = unique([...
%     ramp_idcs.s1.up;...
%     ramp_idcs.s1.down]);
% ramp_idcs.s1_onset = find(sum(AllRamps(:,1:2),2)>0);
% ramp_idcs.s1_offset = find(sum(AllRamps(:,3:4),2)>0);
ramp_idcs.s1 = find(sum(AllRamps(:,1:4),2)>0);
nonramp_idcs.s1 = find(sum(AllRamps(:,1:4),2)==0);

% S2-aligned "ramps"
% ramp_idcs.s2_onset.up = find(sum(AllRamps(:,5),2)>0);
% ramp_idcs.s2_onset.down = find(sum(AllRamps(:,6),2)>0);
% ramp_idcs.s2_onset.both = unique([...
%     ramp_idcs.s2_onset.up;...
%     ramp_idcs.s2_onset.down]);
% ramp_idcs.s2_offset.up = find(sum(AllRamps(:,7),2)>0);
% ramp_idcs.s2_offset.down = find(sum(AllRamps(:,8),2)>0);
% ramp_idcs.s2_offset.both = unique([...
%     ramp_idcs.s2_offset.up;...
%     ramp_idcs.s2_offset.down]);
% ramp_idcs.s2.up = unique([...
%     ramp_idcs.s2_onset.up;...
%     ramp_idcs.s2_offset.up]);
% ramp_idcs.s2.down = unique([...
%     ramp_idcs.s2_onset.down;...
%     ramp_idcs.s2_offset.down]);
% ramp_idcs.s2.both = unique([...
%     ramp_idcs.s2.up;...
%     ramp_idcs.s2.down]);
% ramp_idcs.s2_onset = find(sum(AllRamps(:,5:6),2)>0);
% ramp_idcs.s2_offset = find(sum(AllRamps(:,7:8),2)>0);
ramp_idcs.s2 = find(sum(AllRamps(:,5:8),2)>0);
nonramp_idcs.s2 = find(sum(AllRamps(:,5:8),2)==0);

% go-aligned "ramps"
% ramp_idcs.go_cue.up = find(sum(AllRamps(:,9),2)>0);
% ramp_idcs.go_cue.down = find(sum(AllRamps(:,10),2)>0);
% ramp_idcs.go_cue.both = unique([...
%     ramp_idcs.go_cue.up;...
%     ramp_idcs.go_cue.down]);
ramp_idcs.go = find(sum(AllRamps(:,9:10),2)>0);
nonramp_idcs.go = find(sum(AllRamps(:,9:10),2)==0);

%% parse their non-stereotypical clusters

% preallocation
stereo_idcs = struct();
nonstereo_idcs = struct();

% S1-aligned non-stereotypical neurons
% nonstereo_idcs.s1_onset.up = find(sum(AllNonStereo(:,1),2)>0);
% nonstereo_idcs.s1_onset.down = find(sum(AllNonStereo(:,2),2)>0);
% nonstereo_idcs.s1_onset.both = unique([...
%     nonstereo_idcs.s1_onset.up;...
%     nonstereo_idcs.s1_onset.down]);
% nonstereo_idcs.s1_offset.up = find(sum(AllNonStereo(:,3),2)>0);
% nonstereo_idcs.s1_offset.down = find(sum(AllNonStereo(:,4),2)>0);
% nonstereo_idcs.s1_offset.both = unique([...
%     nonstereo_idcs.s1_offset.up;...
%     nonstereo_idcs.s1_offset.down]);
% nonstereo_idcs.s1.up = unique([...
%     nonstereo_idcs.s1_onset.up;...
%     nonstereo_idcs.s1_offset.up]);
% nonstereo_idcs.s1.down = unique([...
%     nonstereo_idcs.s1_onset.down;...
%     nonstereo_idcs.s1_offset.down]);
% nonstereo_idcs.s1.both = unique([...
%     nonstereo_idcs.s1.up;...
%     nonstereo_idcs.s1.down]);
% nonstereo_idcs.s1_onset = find(sum(AllNonStereo(:,1:2),2)>0);
% nonstereo_idcs.s1_offset = find(sum(AllNonStereo(:,3:4),2)>0);
stereo_idcs.s1 = find(sum(AllStereo(:,1:4),2)>0);
nonstereo_idcs.s1 = find(sum(AllStereo(:,1:4),2)==0);

% S2-aligned non-stereotypical neurons
% nonstereo_idcs.s2_onset.up = find(sum(AllNonStereo(:,5),2)>0);
% nonstereo_idcs.s2_onset.down = find(sum(AllNonStereo(:,6),2)>0);
% nonstereo_idcs.s2_onset.both = unique([...
%     nonstereo_idcs.s2_onset.up;...
%     nonstereo_idcs.s2_onset.down]);
% nonstereo_idcs.s2_offset.up = find(sum(AllNonStereo(:,7),2)>0);
% nonstereo_idcs.s2_offset.down = find(sum(AllNonStereo(:,8),2)>0);
% nonstereo_idcs.s2_offset.both = unique([...
%     nonstereo_idcs.s2_offset.up;...
%     nonstereo_idcs.s2_offset.down]);
% nonstereo_idcs.s2.up = unique([...
%     nonstereo_idcs.s2_onset.up;...
%     nonstereo_idcs.s2_offset.up]);
% nonstereo_idcs.s2.down = unique([...
%     nonstereo_idcs.s2_onset.down;...
%     nonstereo_idcs.s2_offset.down]);
% nonstereo_idcs.s2.both = unique([...
%     nonstereo_idcs.s2.up;...
%     nonstereo_idcs.s2.down]);
% nonstereo_idcs.s2_onset = find(sum(AllNonStereo(:,5:6),2)>0);
% nonstereo_idcs.s2_offset = find(sum(AllNonStereo(:,7:8),2)>0);
stereo_idcs.s2 = find(sum(AllStereo(:,4:end),2)>0);
nonstereo_idcs.s2 = find(sum(AllStereo(:,4:end),2)==0);

% go-aligned non-stereotypical neurons
% nonstereo_idcs.go_cue.up = find(sum(AllNonStereo(:,9),2)>0);
% nonstereo_idcs.go_cue.down = find(sum(AllNonStereo(:,10),2)>0);
% nonstereo_idcs.go_cue.both = unique([...
%     nonstereo_idcs.go_cue.up;...
%     nonstereo_idcs.go_cue.down]);
% nonstereo_idcs.go = find(sum(AllNonStereo(:,9:10),2)>0);

%% sanity check
A = [numel(ramp_idcs.s1),numel(nonramp_idcs.s1);...
numel(ramp_idcs.s2),numel(nonramp_idcs.s2);...
numel(ramp_idcs.go),numel(nonramp_idcs.go);...
numel(stereo_idcs.s1),numel(nonstereo_idcs.s1);...
numel(stereo_idcs.s2),numel(nonstereo_idcs.s2)];
[A,sum(A,2),A(:,1)./A(:,2)]