%% initialization
if ~exist('data','var')
    toso2021_wrapper;
end

%% neuron selection

% selected for being good examples of i2-modulation
if strcmpi(task_str,'duration')
    neurons2plot = [...
        526,72,215,234,393,473,526];
elseif strcmpi(task_str,'intensity')
    neurons2plot = [...
        19,22,30,61,66,70,100,111,112,115,...
        166,238,243,260,344,408,410];
end
% neurons2plot = flagged_neurons;
% neurons2plot = neuron_idcs;
n_neurons2plot = numel(neurons2plot);

%% construct Si-aligned, Ti- & Ii-split psths
ti_padd = [-0,0];
sdf_gain = .8;

% figure initialization
fig = figure(figopt,...
    'position',[165,135,500,490],...
    'name',sprintf('fake_modulation_%s',contrast_str));

% axes initialization
sps = gobjects(2,1);
sps(1) = subplot(1,2,1);
sps(2) = subplot(1,2,2);
set(sps,...
    axesopt.default,...
    'plotboxaspectratiomode','auto',...
    'clipping','off',...
    'ylim',[0,n_neurons2plot+1]+[-1,1]*.05*(n_neurons2plot+1)*0.4169,...
    'ycolor','none');
xxtick = unique([ti_padd(1);-pre_s1_delay;0;t_set;t_set(end)+ti_padd(2)]);
xxtick(xxtick == 0) = abs(xxtick(xxtick == 0));
xxticklabel = num2cell(xxtick);
xxticklabel(~ismember(xxtick,[0,1e3,t_set(t1_mode_idx)])) = {''};
set(sps(1),...
    'xlim',[0,max(t_set)]+ti_padd,...
    'xtick',xxtick,...
    'xticklabel',xxticklabel);
xxtick = unique([-ti_padd(1);0;-t_set;-(t_set(end)+ti_padd(2))]);
xxtick(xxtick == 0) = abs(xxtick(xxtick == 0));
xxticklabel = num2cell(xxtick);
xxticklabel(~ismember(xxtick,-[0,1e3,t_set(t1_mode_idx)])) = {''};
set(sps(2),...
    'xlim',sort(-([0,max(t_set)]+ti_padd)),...
    'xtick',xxtick,...
    'xticklabel',xxticklabel);
xlabel(sps(1),'Time since S_2 onset (ms)');
xlabel(sps(2),'Time since S_2 offset (ms)');
ylabel(sps(1),'Firing rate (Hz)');
ylabel(sps(2),'Firing rate (Hz)');
% annotation('textbox',[0,.9,1,.1],...
%     'string','Time since S_2 onset / offset (ms)',...
%     'fontsize',13.2,...
%     'horizontalalignment','center',...
%     'edgecolor','none');

% reference lines
% plot(sps(1),[1,1]*t_set(t1_mode_idx),ylim,'--k');
% plot(sps(2),[1,1]*-t_set(t1_mode_idx),ylim,'--k');

% iterate through neurons
for nn = 1 : n_neurons2plot
    progressreport(nn,n_neurons2plot,'parsing neural data');
    neuron_flags = data.NeuronNumb == neurons2plot(nn);
    
    % iterate through intensities
    for ii = n_i : -1 : 1
        i2_flags = i2 == i_set(ii);
        s2_spike_flags = ...
            valid_flags & ...
            neuron_flags & ...
            i2_flags;
        if sum(s2_spike_flags) == 0
            continue;
        end
        
        % fetch spike counts & compute spike rates
        s2_spike_counts = data.FakeFR(s2_spike_flags,:);
        s2_spike_rates = conv2(...
            1,kernel.pdf,s2_spike_counts,'valid')' / psthbin * 1e3;
        s2_n_trials = size(s2_spike_counts,1);
        s2on_n_tbins = range(xlim(sps(1)))  * psthbin;
        s2off_n_tbins = range(xlim(sps(2)))  * psthbin;
        
        % S2-onset-aligned, I2-split spike rates
        s2on_alignment_onset = ...
            pre_init_padding + ...
            pre_s1_delay(s2_spike_flags) + ...
            t1(s2_spike_flags) + ...
            isi;
        s2on_alignment_flags = ...
            valid_time >= s2on_alignment_onset + min(xlim(sps(1))) & ...
            valid_time < s2on_alignment_onset + t2(s2_spike_flags);
        s2on_chunk_flags = ...
            valid_time >= s2on_alignment_onset + min(xlim(sps(1))) & ...
            valid_time < s2on_alignment_onset + max(xlim(sps(1)));
        s2on_spkrates = s2_spike_rates;
        s2on_spkrates(~s2on_alignment_flags') = nan;
        s2on_spkrates = reshape(...
            s2on_spkrates(s2on_chunk_flags'),[s2on_n_tbins,s2_n_trials])';
        
        % time selection
        time2plot = min(xlim(sps(1))) + psthbin : psthbin : max(xlim(sps(1)));
        time_flags = time2plot <= max(xlim(sps(1)));
        
        % compute mean spike density function
        s2on_mu = nanmean(s2on_spkrates(:,time_flags),1);
        s2on_std = nanstd(s2on_spkrates(:,time_flags),0,1);
        s2on_trials_throughtime = sum(~isnan(s2on_spkrates),1);
        s2on_sem = s2on_std ./ sqrt(s2on_trials_throughtime);
        
        % flag current stimulus period
        nan_flags = isnan(s2on_mu);
        onset_flags = time2plot <= 0 & [time2plot(2:end),nan] > 0;
        offset_flags = diff([nan_flags,true]) == 1;
        flagged_time = time2plot(~nan_flags);
        
        % patch average activity
        s2on_mu = psths.s2(:,neurons2plot(nn),ii);
        if ii == n_i
            s2_min = min(s2on_mu);
            s2_range = range(s2on_mu);
        end
        s2on_mu = (s2on_mu - s2_min) / s2_range - .5;
        s2on_mu = s2on_mu * sdf_gain + .5 + (nn - 1);
        s2on_xpatch = flagged_time;
        s2on_ypatch = s2on_mu(~nan_flags);
        s2on_ypatch(end) = nan;
        patch_alpha = s2on_trials_throughtime(~nan_flags);
        patch_alpha = (patch_alpha - min(s2on_trials_throughtime)) / ...
            range(s2on_trials_throughtime);
        patch_alpha = patch_alpha * .95 + .05;
        alpha_levels = unique(patch_alpha);
        n_alpha_levels = numel(alpha_levels);
        for aa = 1 : n_alpha_levels
            alpha_flags = patch_alpha == alpha_levels(aa);
            patch(sps(1),...
                [s2on_xpatch(alpha_flags),nan],...
                [s2on_ypatch(alpha_flags);nan],0,...
                'edgealpha',alpha_levels(aa),...
                'edgecolor',i2_clrs(ii,:),...
                'facecolor','none',...
                'linewidth',1.5);
        end
%         patch(sps(1),s2on_xpatch,s2on_ypatch,0,...
%             'facevertexalphadata',patch_alpha',...
%             'alphadatamapping','none',...
%             'edgealpha','interp',...
%             'edgecolor',i2_clrs(ii,:),...
%             'linewidth',1.5);
        
        % plot stimulus onset
        p=plot(sps(1),time2plot(onset_flags),s2on_mu(onset_flags),...
            'linewidth',1.5,...
            'marker','o',...
            'markersize',7.5,...
            'markerfacecolor','w',...
            'markeredgecolor',i2_clrs(ii,:));
        
        % S2-onset-aligned, I2-split spike rates
        s2off_alignment_onset = ...
            pre_init_padding + ...
            pre_s1_delay(s2_spike_flags) + ...
            t1(s2_spike_flags) + ...
            isi + ...
            t2(s2_spike_flags);
        s2off_alignment_flags = ...
            valid_time >= s2off_alignment_onset - t2(s2_spike_flags) & ...
            valid_time < s2off_alignment_onset + max(xlim(sps(2)));
        s2off_chunk_flags = ...
            valid_time >= s2off_alignment_onset + min(xlim(sps(2))) & ...
            valid_time < s2off_alignment_onset + max(xlim(sps(2)));
        s2off_spkrates = s2_spike_rates;
        s2off_spkrates(~s2off_alignment_flags') = nan;
        s2off_spkrates = reshape(...
            s2off_spkrates(s2off_chunk_flags'),[s2off_n_tbins,s2_n_trials])';
        
        % time selection
        time2plot = min(xlim(sps(2))) + psthbin : psthbin : max(xlim(sps(2)));
        time_flags = time2plot <= max(xlim(sps(2)));
        
        % compute mean spike density function
        s2off_mu = nanmean(s2off_spkrates(:,time_flags),1);
        s2off_std = nanstd(s2off_spkrates(:,time_flags),0,1);
        s2off_trials_throughtime = sum(~isnan(s2off_spkrates),1);
        s2off_sem = s2off_std ./ sqrt(s2off_trials_throughtime);
        
        % flag current stimulus period
        nan_flags = isnan(s2off_mu);
        onset_flags = time2plot <= 0 & [time2plot(2:end),nan] > 0;
        offset_flags = diff([nan_flags,true]) == 1;
        flagged_time = time2plot(~nan_flags);
        
        % patch average activity
        s2off_mu = psths.s2off(:,neurons2plot(nn),ii);
        %         if ii == n_i
        %             s2_min = min(s2off_mu);
        %             s2_range = range(s2off_mu);
        %         end
        s2off_mu = (s2off_mu - s2_min) / s2_range - .5;
        s2off_mu = s2off_mu * sdf_gain + .5 + (nn - 1);
        s2off_xpatch = flagged_time;
        s2off_ypatch = s2off_mu(~nan_flags);
        s2off_ypatch(end) = nan;
        patch_alpha = s2off_trials_throughtime(~nan_flags);
        patch_alpha = (patch_alpha - min(s2off_trials_throughtime)) / ...
            range(s2off_trials_throughtime);
        patch_alpha = patch_alpha * .95 + .05;
        alpha_levels = unique(patch_alpha);
        n_alpha_levels = numel(alpha_levels);
        for aa = 1 : n_alpha_levels
            alpha_flags = patch_alpha == alpha_levels(aa);
            patch(sps(2),...
                [s2off_xpatch(alpha_flags),nan],...
                [s2off_ypatch(alpha_flags);nan],0,...
                'edgealpha',alpha_levels(aa),...
                'edgecolor',i2_clrs(ii,:),...
                'facecolor','none',...
                'linewidth',1.5);
        end
%         patch(sps(2),s2off_xpatch,s2off_ypatch,0,...
%             'facevertexalphadata',patch_alpha',...
%             'alphadatamapping','none',...
%             'edgealpha','interp',...
%             'edgecolor',i2_clrs(ii,:),...
%             'linewidth',1.5);
        
        % plot stimulus offset
        plot(sps(2),time2plot(onset_flags),s2off_mu(onset_flags),...
            'linewidth',1.5,...
            'marker','o',...
            'markersize',7.5,...
            'markerfacecolor',i2_clrs(ii,:),...
            'markeredgecolor','w');
    end
end

% iterate through durations
for tt = 1 : n_t
    multiplier = 1 - .015 * (tt - 1);
    
    % plot spike integration window
    plot(sps(1),[0,t_set(tt)],[1,1]*max(ylim(sps(1)))*multiplier,'-k',...
        'linewidth',3);
    plot(sps(2),[-t_set(tt),0],[1,1]*max(ylim(sps(2)))*multiplier,'-k',...
        'linewidth',3);
end

% save figure
if want2save
    svg_file = fullfile(panel_path,[fig.Name,'.svg']);
    print(fig,svg_file,'-dsvg','-painters');
%     png_file = fullfile(panel_path,[fig.Name,'.png']);
%     printtransparentbgpng(fig,png_file,'-r1200','-opengl');
end